// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend.proto

package org.osm2world.core.target.frontend_pbf;

public final class FrontendPbf {
  private FrontendPbf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Vector3dBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.Vector3dBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getCoordsList();
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    int getCoordsCount();
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    long getCoords(int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.Vector3dBlock}
   *
   * <pre>
   * a block containing all three-dimensional vectors used in the tile.
   * Vectors are referenced via their position in this block.
   * Values are in millimeters relative to the center of the tile.
   * The first 3 values are x, y, and z coordinates of the first vector, etc.
   * Therefore, the number of coordinates must be divisible by 3. 
   * </pre>
   */
  public static final class Vector3dBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.Vector3dBlock)
      Vector3dBlockOrBuilder {
    // Use Vector3dBlock.newBuilder() to construct.
    private Vector3dBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vector3dBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vector3dBlock defaultInstance;
    public static Vector3dBlock getDefaultInstance() {
      return defaultInstance;
    }

    public Vector3dBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vector3dBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                coords_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              coords_.add(input.readSInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                coords_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                coords_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          coords_ = java.util.Collections.unmodifiableList(coords_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector3dBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector3dBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<Vector3dBlock> PARSER =
        new com.google.protobuf.AbstractParser<Vector3dBlock>() {
      public Vector3dBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector3dBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vector3dBlock> getParserForType() {
      return PARSER;
    }

    public static final int COORDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> coords_;
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getCoordsList() {
      return coords_;
    }
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    public int getCoordsCount() {
      return coords_.size();
    }
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    public long getCoords(int index) {
      return coords_.get(index);
    }
    private int coordsMemoizedSerializedSize = -1;

    private void initFields() {
      coords_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getCoordsList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(coordsMemoizedSerializedSize);
      }
      for (int i = 0; i < coords_.size(); i++) {
        output.writeSInt64NoTag(coords_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < coords_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(coords_.get(i));
        }
        size += dataSize;
        if (!getCoordsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        coordsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.Vector3dBlock}
     *
     * <pre>
     * a block containing all three-dimensional vectors used in the tile.
     * Vectors are referenced via their position in this block.
     * Values are in millimeters relative to the center of the tile.
     * The first 3 values are x, y, and z coordinates of the first vector, etc.
     * Therefore, the number of coordinates must be divisible by 3. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.Vector3dBlock)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector3dBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector3dBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        coords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector3dBlock_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          coords_ = java.util.Collections.unmodifiableList(coords_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.coords_ = coords_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.getDefaultInstance()) return this;
        if (!other.coords_.isEmpty()) {
          if (coords_.isEmpty()) {
            coords_ = other.coords_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCoordsIsMutable();
            coords_.addAll(other.coords_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> coords_ = java.util.Collections.emptyList();
      private void ensureCoordsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          coords_ = new java.util.ArrayList<java.lang.Long>(coords_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getCoordsList() {
        return java.util.Collections.unmodifiableList(coords_);
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public int getCoordsCount() {
        return coords_.size();
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public long getCoords(int index) {
        return coords_.get(index);
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder setCoords(
          int index, long value) {
        ensureCoordsIsMutable();
        coords_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder addCoords(long value) {
        ensureCoordsIsMutable();
        coords_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder addAllCoords(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCoordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, coords_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder clearCoords() {
        coords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.Vector3dBlock)
    }

    static {
      defaultInstance = new Vector3dBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.Vector3dBlock)
  }

  public interface Vector2dBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.Vector2dBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getCoordsList();
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    int getCoordsCount();
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    long getCoords(int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.Vector2dBlock}
   *
   * <pre>
   * a block containing all two-dimensional vectors used in the tile.
   * See Vector3dBlock for more details.
   * All values are multiplied with 1000. 
   * </pre>
   */
  public static final class Vector2dBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.Vector2dBlock)
      Vector2dBlockOrBuilder {
    // Use Vector2dBlock.newBuilder() to construct.
    private Vector2dBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vector2dBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vector2dBlock defaultInstance;
    public static Vector2dBlock getDefaultInstance() {
      return defaultInstance;
    }

    public Vector2dBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vector2dBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                coords_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              coords_.add(input.readSInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                coords_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                coords_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          coords_ = java.util.Collections.unmodifiableList(coords_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector2dBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector2dBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<Vector2dBlock> PARSER =
        new com.google.protobuf.AbstractParser<Vector2dBlock>() {
      public Vector2dBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector2dBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vector2dBlock> getParserForType() {
      return PARSER;
    }

    public static final int COORDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> coords_;
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getCoordsList() {
      return coords_;
    }
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    public int getCoordsCount() {
      return coords_.size();
    }
    /**
     * <code>repeated sint64 coords = 1 [packed = true];</code>
     */
    public long getCoords(int index) {
      return coords_.get(index);
    }
    private int coordsMemoizedSerializedSize = -1;

    private void initFields() {
      coords_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getCoordsList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(coordsMemoizedSerializedSize);
      }
      for (int i = 0; i < coords_.size(); i++) {
        output.writeSInt64NoTag(coords_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < coords_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(coords_.get(i));
        }
        size += dataSize;
        if (!getCoordsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        coordsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.Vector2dBlock}
     *
     * <pre>
     * a block containing all two-dimensional vectors used in the tile.
     * See Vector3dBlock for more details.
     * All values are multiplied with 1000. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.Vector2dBlock)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector2dBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector2dBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        coords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Vector2dBlock_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          coords_ = java.util.Collections.unmodifiableList(coords_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.coords_ = coords_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.getDefaultInstance()) return this;
        if (!other.coords_.isEmpty()) {
          if (coords_.isEmpty()) {
            coords_ = other.coords_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCoordsIsMutable();
            coords_.addAll(other.coords_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> coords_ = java.util.Collections.emptyList();
      private void ensureCoordsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          coords_ = new java.util.ArrayList<java.lang.Long>(coords_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getCoordsList() {
        return java.util.Collections.unmodifiableList(coords_);
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public int getCoordsCount() {
        return coords_.size();
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public long getCoords(int index) {
        return coords_.get(index);
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder setCoords(
          int index, long value) {
        ensureCoordsIsMutable();
        coords_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder addCoords(long value) {
        ensureCoordsIsMutable();
        coords_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder addAllCoords(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCoordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, coords_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 coords = 1 [packed = true];</code>
       */
      public Builder clearCoords() {
        coords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.Vector2dBlock)
    }

    static {
      defaultInstance = new Vector2dBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.Vector2dBlock)
  }

  public interface StringBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.StringBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string strings = 1;</code>
     */
    com.google.protobuf.ProtocolStringList
        getStringsList();
    /**
     * <code>repeated string strings = 1;</code>
     */
    int getStringsCount();
    /**
     * <code>repeated string strings = 1;</code>
     */
    java.lang.String getStrings(int index);
    /**
     * <code>repeated string strings = 1;</code>
     */
    com.google.protobuf.ByteString
        getStringsBytes(int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.StringBlock}
   *
   * <pre>
   * a block containing strings referenced elsewhere in the tile. 
   * </pre>
   */
  public static final class StringBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.StringBlock)
      StringBlockOrBuilder {
    // Use StringBlock.newBuilder() to construct.
    private StringBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StringBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StringBlock defaultInstance;
    public static StringBlock getDefaultInstance() {
      return defaultInstance;
    }

    public StringBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StringBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                strings_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              strings_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          strings_ = strings_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_StringBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_StringBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<StringBlock> PARSER =
        new com.google.protobuf.AbstractParser<StringBlock>() {
      public StringBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StringBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StringBlock> getParserForType() {
      return PARSER;
    }

    public static final int STRINGS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList strings_;
    /**
     * <code>repeated string strings = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStringsList() {
      return strings_;
    }
    /**
     * <code>repeated string strings = 1;</code>
     */
    public int getStringsCount() {
      return strings_.size();
    }
    /**
     * <code>repeated string strings = 1;</code>
     */
    public java.lang.String getStrings(int index) {
      return strings_.get(index);
    }
    /**
     * <code>repeated string strings = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStringsBytes(int index) {
      return strings_.getByteString(index);
    }

    private void initFields() {
      strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < strings_.size(); i++) {
        output.writeBytes(1, strings_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < strings_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strings_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStringsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.StringBlock}
     *
     * <pre>
     * a block containing strings referenced elsewhere in the tile. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.StringBlock)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_StringBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_StringBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_StringBlock_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          strings_ = strings_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.strings_ = strings_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.getDefaultInstance()) return this;
        if (!other.strings_.isEmpty()) {
          if (strings_.isEmpty()) {
            strings_ = other.strings_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStringsIsMutable();
            strings_.addAll(other.strings_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          strings_ = new com.google.protobuf.LazyStringArrayList(strings_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStringsList() {
        return strings_.getUnmodifiableView();
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public int getStringsCount() {
        return strings_.size();
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public java.lang.String getStrings(int index) {
        return strings_.get(index);
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStringsBytes(int index) {
        return strings_.getByteString(index);
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public Builder setStrings(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public Builder addStrings(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public Builder addAllStrings(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strings_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public Builder clearStrings() {
        strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 1;</code>
       */
      public Builder addStringsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.StringBlock)
    }

    static {
      defaultInstance = new StringBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.StringBlock)
  }

  public interface ShapeBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.ShapeBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape> 
        getShapesList();
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape getShapes(int index);
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    int getShapesCount();
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder> 
        getShapesOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder getShapesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.ShapeBlock}
   *
   * <pre>
   * a block containing all 2d shapes used in the tile. 
   * </pre>
   */
  public static final class ShapeBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.ShapeBlock)
      ShapeBlockOrBuilder {
    // Use ShapeBlock.newBuilder() to construct.
    private ShapeBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShapeBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShapeBlock defaultInstance;
    public static ShapeBlock getDefaultInstance() {
      return defaultInstance;
    }

    public ShapeBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShapeBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                shapes_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape>();
                mutable_bitField0_ |= 0x00000001;
              }
              shapes_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          shapes_ = java.util.Collections.unmodifiableList(shapes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ShapeBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ShapeBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<ShapeBlock> PARSER =
        new com.google.protobuf.AbstractParser<ShapeBlock>() {
      public ShapeBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShapeBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShapeBlock> getParserForType() {
      return PARSER;
    }

    public static final int SHAPES_FIELD_NUMBER = 1;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape> shapes_;
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape> getShapesList() {
      return shapes_;
    }
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder> 
        getShapesOrBuilderList() {
      return shapes_;
    }
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    public int getShapesCount() {
      return shapes_.size();
    }
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape getShapes(int index) {
      return shapes_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder getShapesOrBuilder(
        int index) {
      return shapes_.get(index);
    }

    private void initFields() {
      shapes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getShapesCount(); i++) {
        if (!getShapes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < shapes_.size(); i++) {
        output.writeMessage(1, shapes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < shapes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, shapes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.ShapeBlock}
     *
     * <pre>
     * a block containing all 2d shapes used in the tile. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.ShapeBlock)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ShapeBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ShapeBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getShapesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          shapesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ShapeBlock_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock(this);
        int from_bitField0_ = bitField0_;
        if (shapesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            shapes_ = java.util.Collections.unmodifiableList(shapes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.shapes_ = shapes_;
        } else {
          result.shapes_ = shapesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.getDefaultInstance()) return this;
        if (shapesBuilder_ == null) {
          if (!other.shapes_.isEmpty()) {
            if (shapes_.isEmpty()) {
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureShapesIsMutable();
              shapes_.addAll(other.shapes_);
            }
            onChanged();
          }
        } else {
          if (!other.shapes_.isEmpty()) {
            if (shapesBuilder_.isEmpty()) {
              shapesBuilder_.dispose();
              shapesBuilder_ = null;
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              shapesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getShapesFieldBuilder() : null;
            } else {
              shapesBuilder_.addAllMessages(other.shapes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getShapesCount(); i++) {
          if (!getShapes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape> shapes_ =
        java.util.Collections.emptyList();
      private void ensureShapesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          shapes_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape>(shapes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder> shapesBuilder_;

      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape> getShapesList() {
        if (shapesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shapes_);
        } else {
          return shapesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public int getShapesCount() {
        if (shapesBuilder_ == null) {
          return shapes_.size();
        } else {
          return shapesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape getShapes(int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);
        } else {
          return shapesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder setShapes(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.set(index, value);
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder setShapes(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.set(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder addShapes(org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder addShapes(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(index, value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder addShapes(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder addShapes(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder addAllShapes(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape> values) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shapes_);
          onChanged();
        } else {
          shapesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder clearShapes() {
        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          shapesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public Builder removeShapes(int index) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.remove(index);
          onChanged();
        } else {
          shapesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder getShapesBuilder(
          int index) {
        return getShapesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder getShapesOrBuilder(
          int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);  } else {
          return shapesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder> 
           getShapesOrBuilderList() {
        if (shapesBuilder_ != null) {
          return shapesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shapes_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder addShapesBuilder() {
        return getShapesFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder addShapesBuilder(
          int index) {
        return getShapesFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.Shape shapes = 1;</code>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder> 
           getShapesBuilderList() {
        return getShapesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder> 
          getShapesFieldBuilder() {
        if (shapesBuilder_ == null) {
          shapesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder>(
                  shapes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          shapes_ = null;
        }
        return shapesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.ShapeBlock)
    }

    static {
      defaultInstance = new ShapeBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.ShapeBlock)
  }

  public interface ShapeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.Shape)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType getType();

    /**
     * <code>repeated sint64 parameters = 2 [packed = true];</code>
     *
     * <pre>
     * parameters for the shape, such as the radius of a circle.
     *The precise meaning depends on the shape type! 
     * </pre>
     */
    java.util.List<java.lang.Long> getParametersList();
    /**
     * <code>repeated sint64 parameters = 2 [packed = true];</code>
     *
     * <pre>
     * parameters for the shape, such as the radius of a circle.
     *The precise meaning depends on the shape type! 
     * </pre>
     */
    int getParametersCount();
    /**
     * <code>repeated sint64 parameters = 2 [packed = true];</code>
     *
     * <pre>
     * parameters for the shape, such as the radius of a circle.
     *The precise meaning depends on the shape type! 
     * </pre>
     */
    long getParameters(int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.Shape}
   *
   * <pre>
   * a 2d shape 
   * </pre>
   */
  public static final class Shape extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.Shape)
      ShapeOrBuilder {
    // Use Shape.newBuilder() to construct.
    private Shape(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Shape(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Shape defaultInstance;
    public static Shape getDefaultInstance() {
      return defaultInstance;
    }

    public Shape getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Shape(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType value = org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                parameters_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              parameters_.add(input.readSInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                parameters_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                parameters_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Shape_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Shape_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder.class);
    }

    public static com.google.protobuf.Parser<Shape> PARSER =
        new com.google.protobuf.AbstractParser<Shape>() {
      public Shape parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Shape(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Shape> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code frontend_pbf.Shape.ShapeType}
     */
    public enum ShapeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CIRCLE = 1;</code>
       *
       * <pre>
       * a circle. There are only two parameters:
       * - the center, as a reference to the vector2dBlock
       * - the radius, in millimeters.
       * </pre>
       */
      CIRCLE(0, 1),
      /**
       * <code>POLYGON = 2;</code>
       *
       * <pre>
       * a closed polygon. The parameters represent a series of 2d vectors (x0, y0, x1, y1, ...). Vector components are in millimeters. 
       * </pre>
       */
      POLYGON(1, 2),
      /**
       * <code>POLYLINE = 3;</code>
       *
       * <pre>
       * a polyline. The parameters represent a series of 2d vectors (x0, y0, x1, y1, ...). Vector components are in millimeters. 
       * </pre>
       */
      POLYLINE(2, 3),
      ;

      /**
       * <code>CIRCLE = 1;</code>
       *
       * <pre>
       * a circle. There are only two parameters:
       * - the center, as a reference to the vector2dBlock
       * - the radius, in millimeters.
       * </pre>
       */
      public static final int CIRCLE_VALUE = 1;
      /**
       * <code>POLYGON = 2;</code>
       *
       * <pre>
       * a closed polygon. The parameters represent a series of 2d vectors (x0, y0, x1, y1, ...). Vector components are in millimeters. 
       * </pre>
       */
      public static final int POLYGON_VALUE = 2;
      /**
       * <code>POLYLINE = 3;</code>
       *
       * <pre>
       * a polyline. The parameters represent a series of 2d vectors (x0, y0, x1, y1, ...). Vector components are in millimeters. 
       * </pre>
       */
      public static final int POLYLINE_VALUE = 3;


      public final int getNumber() { return value; }

      public static ShapeType valueOf(int value) {
        switch (value) {
          case 1: return CIRCLE;
          case 2: return POLYGON;
          case 3: return POLYLINE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ShapeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ShapeType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ShapeType>() {
              public ShapeType findValueByNumber(int number) {
                return ShapeType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.getDescriptor().getEnumTypes().get(0);
      }

      private static final ShapeType[] VALUES = values();

      public static ShapeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ShapeType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:frontend_pbf.Shape.ShapeType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType type_;
    /**
     * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType getType() {
      return type_;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> parameters_;
    /**
     * <code>repeated sint64 parameters = 2 [packed = true];</code>
     *
     * <pre>
     * parameters for the shape, such as the radius of a circle.
     *The precise meaning depends on the shape type! 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getParametersList() {
      return parameters_;
    }
    /**
     * <code>repeated sint64 parameters = 2 [packed = true];</code>
     *
     * <pre>
     * parameters for the shape, such as the radius of a circle.
     *The precise meaning depends on the shape type! 
     * </pre>
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <code>repeated sint64 parameters = 2 [packed = true];</code>
     *
     * <pre>
     * parameters for the shape, such as the radius of a circle.
     *The precise meaning depends on the shape type! 
     * </pre>
     */
    public long getParameters(int index) {
      return parameters_.get(index);
    }
    private int parametersMemoizedSerializedSize = -1;

    private void initFields() {
      type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType.CIRCLE;
      parameters_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (getParametersList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(parametersMemoizedSerializedSize);
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeSInt64NoTag(parameters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < parameters_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(parameters_.get(i));
        }
        size += dataSize;
        if (!getParametersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        parametersMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.Shape}
     *
     * <pre>
     * a 2d shape 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.Shape)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Shape_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Shape_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType.CIRCLE;
        bitField0_ = (bitField0_ & ~0x00000001);
        parameters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Shape_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.parameters_ = parameters_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.parameters_.isEmpty()) {
          if (parameters_.isEmpty()) {
            parameters_ = other.parameters_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParametersIsMutable();
            parameters_.addAll(other.parameters_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType.CIRCLE;
      /**
       * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType getType() {
        return type_;
      }
      /**
       * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
       */
      public Builder setType(org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .frontend_pbf.Shape.ShapeType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Shape.ShapeType.CIRCLE;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> parameters_ = java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          parameters_ = new java.util.ArrayList<java.lang.Long>(parameters_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated sint64 parameters = 2 [packed = true];</code>
       *
       * <pre>
       * parameters for the shape, such as the radius of a circle.
       *The precise meaning depends on the shape type! 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getParametersList() {
        return java.util.Collections.unmodifiableList(parameters_);
      }
      /**
       * <code>repeated sint64 parameters = 2 [packed = true];</code>
       *
       * <pre>
       * parameters for the shape, such as the radius of a circle.
       *The precise meaning depends on the shape type! 
       * </pre>
       */
      public int getParametersCount() {
        return parameters_.size();
      }
      /**
       * <code>repeated sint64 parameters = 2 [packed = true];</code>
       *
       * <pre>
       * parameters for the shape, such as the radius of a circle.
       *The precise meaning depends on the shape type! 
       * </pre>
       */
      public long getParameters(int index) {
        return parameters_.get(index);
      }
      /**
       * <code>repeated sint64 parameters = 2 [packed = true];</code>
       *
       * <pre>
       * parameters for the shape, such as the radius of a circle.
       *The precise meaning depends on the shape type! 
       * </pre>
       */
      public Builder setParameters(
          int index, long value) {
        ensureParametersIsMutable();
        parameters_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 parameters = 2 [packed = true];</code>
       *
       * <pre>
       * parameters for the shape, such as the radius of a circle.
       *The precise meaning depends on the shape type! 
       * </pre>
       */
      public Builder addParameters(long value) {
        ensureParametersIsMutable();
        parameters_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 parameters = 2 [packed = true];</code>
       *
       * <pre>
       * parameters for the shape, such as the radius of a circle.
       *The precise meaning depends on the shape type! 
       * </pre>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureParametersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameters_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 parameters = 2 [packed = true];</code>
       *
       * <pre>
       * parameters for the shape, such as the radius of a circle.
       *The precise meaning depends on the shape type! 
       * </pre>
       */
      public Builder clearParameters() {
        parameters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.Shape)
    }

    static {
      defaultInstance = new Shape(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.Shape)
  }

  public interface MaterialBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.MaterialBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material> 
        getMaterialsList();
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Material getMaterials(int index);
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    int getMaterialsCount();
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder> 
        getMaterialsOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder getMaterialsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.MaterialBlock}
   *
   * <pre>
   * a block containing all materials used in the tile. 
   * </pre>
   */
  public static final class MaterialBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.MaterialBlock)
      MaterialBlockOrBuilder {
    // Use MaterialBlock.newBuilder() to construct.
    private MaterialBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaterialBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaterialBlock defaultInstance;
    public static MaterialBlock getDefaultInstance() {
      return defaultInstance;
    }

    public MaterialBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaterialBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                materials_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material>();
                mutable_bitField0_ |= 0x00000001;
              }
              materials_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          materials_ = java.util.Collections.unmodifiableList(materials_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_MaterialBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_MaterialBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<MaterialBlock> PARSER =
        new com.google.protobuf.AbstractParser<MaterialBlock>() {
      public MaterialBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaterialBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaterialBlock> getParserForType() {
      return PARSER;
    }

    public static final int MATERIALS_FIELD_NUMBER = 1;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material> materials_;
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material> getMaterialsList() {
      return materials_;
    }
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder> 
        getMaterialsOrBuilderList() {
      return materials_;
    }
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    public int getMaterialsCount() {
      return materials_.size();
    }
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material getMaterials(int index) {
      return materials_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.Material materials = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder getMaterialsOrBuilder(
        int index) {
      return materials_.get(index);
    }

    private void initFields() {
      materials_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getMaterialsCount(); i++) {
        if (!getMaterials(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < materials_.size(); i++) {
        output.writeMessage(1, materials_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < materials_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, materials_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.MaterialBlock}
     *
     * <pre>
     * a block containing all materials used in the tile. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.MaterialBlock)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_MaterialBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_MaterialBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMaterialsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (materialsBuilder_ == null) {
          materials_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          materialsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_MaterialBlock_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock(this);
        int from_bitField0_ = bitField0_;
        if (materialsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            materials_ = java.util.Collections.unmodifiableList(materials_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.materials_ = materials_;
        } else {
          result.materials_ = materialsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.getDefaultInstance()) return this;
        if (materialsBuilder_ == null) {
          if (!other.materials_.isEmpty()) {
            if (materials_.isEmpty()) {
              materials_ = other.materials_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMaterialsIsMutable();
              materials_.addAll(other.materials_);
            }
            onChanged();
          }
        } else {
          if (!other.materials_.isEmpty()) {
            if (materialsBuilder_.isEmpty()) {
              materialsBuilder_.dispose();
              materialsBuilder_ = null;
              materials_ = other.materials_;
              bitField0_ = (bitField0_ & ~0x00000001);
              materialsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMaterialsFieldBuilder() : null;
            } else {
              materialsBuilder_.addAllMessages(other.materials_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getMaterialsCount(); i++) {
          if (!getMaterials(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material> materials_ =
        java.util.Collections.emptyList();
      private void ensureMaterialsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          materials_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material>(materials_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder> materialsBuilder_;

      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material> getMaterialsList() {
        if (materialsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(materials_);
        } else {
          return materialsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public int getMaterialsCount() {
        if (materialsBuilder_ == null) {
          return materials_.size();
        } else {
          return materialsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material getMaterials(int index) {
        if (materialsBuilder_ == null) {
          return materials_.get(index);
        } else {
          return materialsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder setMaterials(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material value) {
        if (materialsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMaterialsIsMutable();
          materials_.set(index, value);
          onChanged();
        } else {
          materialsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder setMaterials(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder builderForValue) {
        if (materialsBuilder_ == null) {
          ensureMaterialsIsMutable();
          materials_.set(index, builderForValue.build());
          onChanged();
        } else {
          materialsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder addMaterials(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material value) {
        if (materialsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMaterialsIsMutable();
          materials_.add(value);
          onChanged();
        } else {
          materialsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder addMaterials(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material value) {
        if (materialsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMaterialsIsMutable();
          materials_.add(index, value);
          onChanged();
        } else {
          materialsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder addMaterials(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder builderForValue) {
        if (materialsBuilder_ == null) {
          ensureMaterialsIsMutable();
          materials_.add(builderForValue.build());
          onChanged();
        } else {
          materialsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder addMaterials(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder builderForValue) {
        if (materialsBuilder_ == null) {
          ensureMaterialsIsMutable();
          materials_.add(index, builderForValue.build());
          onChanged();
        } else {
          materialsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder addAllMaterials(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.Material> values) {
        if (materialsBuilder_ == null) {
          ensureMaterialsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, materials_);
          onChanged();
        } else {
          materialsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder clearMaterials() {
        if (materialsBuilder_ == null) {
          materials_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          materialsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public Builder removeMaterials(int index) {
        if (materialsBuilder_ == null) {
          ensureMaterialsIsMutable();
          materials_.remove(index);
          onChanged();
        } else {
          materialsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder getMaterialsBuilder(
          int index) {
        return getMaterialsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder getMaterialsOrBuilder(
          int index) {
        if (materialsBuilder_ == null) {
          return materials_.get(index);  } else {
          return materialsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder> 
           getMaterialsOrBuilderList() {
        if (materialsBuilder_ != null) {
          return materialsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(materials_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder addMaterialsBuilder() {
        return getMaterialsFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder addMaterialsBuilder(
          int index) {
        return getMaterialsFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.Material materials = 1;</code>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder> 
           getMaterialsBuilderList() {
        return getMaterialsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder> 
          getMaterialsFieldBuilder() {
        if (materialsBuilder_ == null) {
          materialsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Material, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder>(
                  materials_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          materials_ = null;
        }
        return materialsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.MaterialBlock)
    }

    static {
      defaultInstance = new MaterialBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.MaterialBlock)
  }

  public interface MaterialOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.Material)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 ambientR = 1;</code>
     */
    boolean hasAmbientR();
    /**
     * <code>required uint32 ambientR = 1;</code>
     */
    int getAmbientR();

    /**
     * <code>required uint32 ambientG = 2;</code>
     */
    boolean hasAmbientG();
    /**
     * <code>required uint32 ambientG = 2;</code>
     */
    int getAmbientG();

    /**
     * <code>required uint32 ambientB = 3;</code>
     */
    boolean hasAmbientB();
    /**
     * <code>required uint32 ambientB = 3;</code>
     */
    int getAmbientB();

    /**
     * <code>required uint32 diffuseR = 4;</code>
     */
    boolean hasDiffuseR();
    /**
     * <code>required uint32 diffuseR = 4;</code>
     */
    int getDiffuseR();

    /**
     * <code>required uint32 diffuseG = 5;</code>
     */
    boolean hasDiffuseG();
    /**
     * <code>required uint32 diffuseG = 5;</code>
     */
    int getDiffuseG();

    /**
     * <code>required uint32 diffuseB = 6;</code>
     */
    boolean hasDiffuseB();
    /**
     * <code>required uint32 diffuseB = 6;</code>
     */
    int getDiffuseB();

    /**
     * <code>required uint32 specularR = 7;</code>
     */
    boolean hasSpecularR();
    /**
     * <code>required uint32 specularR = 7;</code>
     */
    int getSpecularR();

    /**
     * <code>required uint32 specularG = 8;</code>
     */
    boolean hasSpecularG();
    /**
     * <code>required uint32 specularG = 8;</code>
     */
    int getSpecularG();

    /**
     * <code>required uint32 specularB = 9;</code>
     */
    boolean hasSpecularB();
    /**
     * <code>required uint32 specularB = 9;</code>
     */
    int getSpecularB();

    /**
     * <code>required uint32 shininess = 10;</code>
     */
    boolean hasShininess();
    /**
     * <code>required uint32 shininess = 10;</code>
     */
    int getShininess();

    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer> 
        getTextureLayerList();
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer getTextureLayer(int index);
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    int getTextureLayerCount();
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder> 
        getTextureLayerOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder getTextureLayerOrBuilder(
        int index);

    /**
     * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
     *
     * <pre>
     * the type of transparency 
     * </pre>
     */
    boolean hasTransparency();
    /**
     * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
     *
     * <pre>
     * the type of transparency 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency getTransparency();

    /**
     * <code>optional bool castShadow = 17 [default = true];</code>
     *
     * <pre>
     * whether this material casts shadows 
     * </pre>
     */
    boolean hasCastShadow();
    /**
     * <code>optional bool castShadow = 17 [default = true];</code>
     *
     * <pre>
     * whether this material casts shadows 
     * </pre>
     */
    boolean getCastShadow();
  }
  /**
   * Protobuf type {@code frontend_pbf.Material}
   *
   * <pre>
   * a set of material properties, using RGB colors.
   * Color components are in the range [0, 255]. 
   * </pre>
   */
  public static final class Material extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.Material)
      MaterialOrBuilder {
    // Use Material.newBuilder() to construct.
    private Material(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Material(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Material defaultInstance;
    public static Material getDefaultInstance() {
      return defaultInstance;
    }

    public Material getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Material(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ambientR_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ambientG_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ambientB_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              diffuseR_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              diffuseG_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              diffuseB_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              specularR_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              specularG_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              specularB_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              shininess_ = input.readUInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                textureLayer_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer>();
                mutable_bitField0_ |= 0x00000400;
              }
              textureLayer_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.PARSER, extensionRegistry));
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency value = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                transparency_ = value;
              }
              break;
            }
            case 136: {
              bitField0_ |= 0x00000800;
              castShadow_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          textureLayer_ = java.util.Collections.unmodifiableList(textureLayer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder.class);
    }

    public static com.google.protobuf.Parser<Material> PARSER =
        new com.google.protobuf.AbstractParser<Material>() {
      public Material parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Material(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Material> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code frontend_pbf.Material.Transparency}
     */
    public enum Transparency
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TRUE = 1;</code>
       *
       * <pre>
       * arbitrary transparency, including partially transparent pixels 
       * </pre>
       */
      TRUE(0, 1),
      /**
       * <code>BINARY = 2;</code>
       *
       * <pre>
       * only allow pixels to be either fully transparent or fully opaque 
       * </pre>
       */
      BINARY(1, 2),
      /**
       * <code>FALSE = 3;</code>
       *
       * <pre>
       * all pixels are opaque 
       * </pre>
       */
      FALSE(2, 3),
      ;

      /**
       * <code>TRUE = 1;</code>
       *
       * <pre>
       * arbitrary transparency, including partially transparent pixels 
       * </pre>
       */
      public static final int TRUE_VALUE = 1;
      /**
       * <code>BINARY = 2;</code>
       *
       * <pre>
       * only allow pixels to be either fully transparent or fully opaque 
       * </pre>
       */
      public static final int BINARY_VALUE = 2;
      /**
       * <code>FALSE = 3;</code>
       *
       * <pre>
       * all pixels are opaque 
       * </pre>
       */
      public static final int FALSE_VALUE = 3;


      public final int getNumber() { return value; }

      public static Transparency valueOf(int value) {
        switch (value) {
          case 1: return TRUE;
          case 2: return BINARY;
          case 3: return FALSE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Transparency>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Transparency>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Transparency>() {
              public Transparency findValueByNumber(int number) {
                return Transparency.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.getDescriptor().getEnumTypes().get(0);
      }

      private static final Transparency[] VALUES = values();

      public static Transparency valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Transparency(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:frontend_pbf.Material.Transparency)
    }

    public interface TextureLayerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:frontend_pbf.Material.TextureLayer)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string textureURL = 1;</code>
       *
       * <pre>
       * url of the texture image, can be relative 
       * </pre>
       */
      boolean hasTextureURL();
      /**
       * <code>required string textureURL = 1;</code>
       *
       * <pre>
       * url of the texture image, can be relative 
       * </pre>
       */
      java.lang.String getTextureURL();
      /**
       * <code>required string textureURL = 1;</code>
       *
       * <pre>
       * url of the texture image, can be relative 
       * </pre>
       */
      com.google.protobuf.ByteString
          getTextureURLBytes();

      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
       *
       * <pre>
       * how the texture behaves for texture coordinates
       * less than 0 or greater than 1 
       * </pre>
       */
      boolean hasWrap();
      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
       *
       * <pre>
       * how the texture behaves for texture coordinates
       * less than 0 or greater than 1 
       * </pre>
       */
      org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap getWrap();

      /**
       * <code>required bool colorable = 3;</code>
       *
       * <pre>
       * whether the texture should be multiplied with the material's base color 
       * </pre>
       */
      boolean hasColorable();
      /**
       * <code>required bool colorable = 3;</code>
       *
       * <pre>
       * whether the texture should be multiplied with the material's base color 
       * </pre>
       */
      boolean getColorable();

      /**
       * <code>required uint32 textureWidth = 4;</code>
       *
       * <pre>
       * width of the texture in millimeters. 
       * </pre>
       */
      boolean hasTextureWidth();
      /**
       * <code>required uint32 textureWidth = 4;</code>
       *
       * <pre>
       * width of the texture in millimeters. 
       * </pre>
       */
      int getTextureWidth();

      /**
       * <code>required uint32 textureHeight = 5;</code>
       *
       * <pre>
       * height of the texture in millimeters. 
       * </pre>
       */
      boolean hasTextureHeight();
      /**
       * <code>required uint32 textureHeight = 5;</code>
       *
       * <pre>
       * height of the texture in millimeters. 
       * </pre>
       */
      int getTextureHeight();

      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
       */
      boolean hasTexCoordFunction();
      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
       */
      org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction getTexCoordFunction();
    }
    /**
     * Protobuf type {@code frontend_pbf.Material.TextureLayer}
     */
    public static final class TextureLayer extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:frontend_pbf.Material.TextureLayer)
        TextureLayerOrBuilder {
      // Use TextureLayer.newBuilder() to construct.
      private TextureLayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private TextureLayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final TextureLayer defaultInstance;
      public static TextureLayer getDefaultInstance() {
        return defaultInstance;
      }

      public TextureLayer getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private TextureLayer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                textureURL_ = bs;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap value = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  wrap_ = value;
                }
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                colorable_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                textureWidth_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                textureHeight_ = input.readUInt32();
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction value = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  texCoordFunction_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_TextureLayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_TextureLayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder.class);
      }

      public static com.google.protobuf.Parser<TextureLayer> PARSER =
          new com.google.protobuf.AbstractParser<TextureLayer>() {
        public TextureLayer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TextureLayer(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<TextureLayer> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code frontend_pbf.Material.TextureLayer.Wrap}
       */
      public enum Wrap
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>REPEAT = 1;</code>
         */
        REPEAT(0, 1),
        /**
         * <code>CLAMP = 2;</code>
         */
        CLAMP(1, 2),
        ;

        /**
         * <code>REPEAT = 1;</code>
         */
        public static final int REPEAT_VALUE = 1;
        /**
         * <code>CLAMP = 2;</code>
         */
        public static final int CLAMP_VALUE = 2;


        public final int getNumber() { return value; }

        public static Wrap valueOf(int value) {
          switch (value) {
            case 1: return REPEAT;
            case 2: return CLAMP;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Wrap>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Wrap>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Wrap>() {
                public Wrap findValueByNumber(int number) {
                  return Wrap.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.getDescriptor().getEnumTypes().get(0);
        }

        private static final Wrap[] VALUES = values();

        public static Wrap valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private Wrap(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:frontend_pbf.Material.TextureLayer.Wrap)
      }

      /**
       * Protobuf enum {@code frontend_pbf.Material.TextureLayer.TexCoordFunction}
       */
      public enum TexCoordFunction
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>CUSTOM = 1;</code>
         *
         * <pre>
         * No standard function is used. Texture coordinates for this layer will be provided alongside the geometry. 
         * </pre>
         */
        CUSTOM(0, 1),
        /**
         * <code>GLOBAL_X_Z = 2;</code>
         *
         * <pre>
         * uses x and z vertex coords together with the texture's width and height to place a texture 
         * </pre>
         */
        GLOBAL_X_Z(1, 2),
        ;

        /**
         * <code>CUSTOM = 1;</code>
         *
         * <pre>
         * No standard function is used. Texture coordinates for this layer will be provided alongside the geometry. 
         * </pre>
         */
        public static final int CUSTOM_VALUE = 1;
        /**
         * <code>GLOBAL_X_Z = 2;</code>
         *
         * <pre>
         * uses x and z vertex coords together with the texture's width and height to place a texture 
         * </pre>
         */
        public static final int GLOBAL_X_Z_VALUE = 2;


        public final int getNumber() { return value; }

        public static TexCoordFunction valueOf(int value) {
          switch (value) {
            case 1: return CUSTOM;
            case 2: return GLOBAL_X_Z;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<TexCoordFunction>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<TexCoordFunction>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TexCoordFunction>() {
                public TexCoordFunction findValueByNumber(int number) {
                  return TexCoordFunction.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.getDescriptor().getEnumTypes().get(1);
        }

        private static final TexCoordFunction[] VALUES = values();

        public static TexCoordFunction valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private TexCoordFunction(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:frontend_pbf.Material.TextureLayer.TexCoordFunction)
      }

      private int bitField0_;
      public static final int TEXTUREURL_FIELD_NUMBER = 1;
      private java.lang.Object textureURL_;
      /**
       * <code>required string textureURL = 1;</code>
       *
       * <pre>
       * url of the texture image, can be relative 
       * </pre>
       */
      public boolean hasTextureURL() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string textureURL = 1;</code>
       *
       * <pre>
       * url of the texture image, can be relative 
       * </pre>
       */
      public java.lang.String getTextureURL() {
        java.lang.Object ref = textureURL_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            textureURL_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string textureURL = 1;</code>
       *
       * <pre>
       * url of the texture image, can be relative 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTextureURLBytes() {
        java.lang.Object ref = textureURL_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          textureURL_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int WRAP_FIELD_NUMBER = 2;
      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap wrap_;
      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
       *
       * <pre>
       * how the texture behaves for texture coordinates
       * less than 0 or greater than 1 
       * </pre>
       */
      public boolean hasWrap() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
       *
       * <pre>
       * how the texture behaves for texture coordinates
       * less than 0 or greater than 1 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap getWrap() {
        return wrap_;
      }

      public static final int COLORABLE_FIELD_NUMBER = 3;
      private boolean colorable_;
      /**
       * <code>required bool colorable = 3;</code>
       *
       * <pre>
       * whether the texture should be multiplied with the material's base color 
       * </pre>
       */
      public boolean hasColorable() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool colorable = 3;</code>
       *
       * <pre>
       * whether the texture should be multiplied with the material's base color 
       * </pre>
       */
      public boolean getColorable() {
        return colorable_;
      }

      public static final int TEXTUREWIDTH_FIELD_NUMBER = 4;
      private int textureWidth_;
      /**
       * <code>required uint32 textureWidth = 4;</code>
       *
       * <pre>
       * width of the texture in millimeters. 
       * </pre>
       */
      public boolean hasTextureWidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 textureWidth = 4;</code>
       *
       * <pre>
       * width of the texture in millimeters. 
       * </pre>
       */
      public int getTextureWidth() {
        return textureWidth_;
      }

      public static final int TEXTUREHEIGHT_FIELD_NUMBER = 5;
      private int textureHeight_;
      /**
       * <code>required uint32 textureHeight = 5;</code>
       *
       * <pre>
       * height of the texture in millimeters. 
       * </pre>
       */
      public boolean hasTextureHeight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 textureHeight = 5;</code>
       *
       * <pre>
       * height of the texture in millimeters. 
       * </pre>
       */
      public int getTextureHeight() {
        return textureHeight_;
      }

      public static final int TEXCOORDFUNCTION_FIELD_NUMBER = 6;
      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction texCoordFunction_;
      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
       */
      public boolean hasTexCoordFunction() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction getTexCoordFunction() {
        return texCoordFunction_;
      }

      private void initFields() {
        textureURL_ = "";
        wrap_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap.REPEAT;
        colorable_ = false;
        textureWidth_ = 0;
        textureHeight_ = 0;
        texCoordFunction_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction.CUSTOM;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasTextureURL()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasColorable()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTextureWidth()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTextureHeight()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getTextureURLBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, wrap_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, colorable_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, textureWidth_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, textureHeight_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, texCoordFunction_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getTextureURLBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, wrap_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, colorable_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, textureWidth_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, textureHeight_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, texCoordFunction_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code frontend_pbf.Material.TextureLayer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:frontend_pbf.Material.TextureLayer)
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_TextureLayer_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_TextureLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder.class);
        }

        // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          textureURL_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          wrap_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap.REPEAT;
          bitField0_ = (bitField0_ & ~0x00000002);
          colorable_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          textureWidth_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          textureHeight_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          texCoordFunction_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction.CUSTOM;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_TextureLayer_descriptor;
        }

        public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer getDefaultInstanceForType() {
          return org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.getDefaultInstance();
        }

        public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer build() {
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer buildPartial() {
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.textureURL_ = textureURL_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.wrap_ = wrap_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.colorable_ = colorable_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.textureWidth_ = textureWidth_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.textureHeight_ = textureHeight_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.texCoordFunction_ = texCoordFunction_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer) {
            return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer other) {
          if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.getDefaultInstance()) return this;
          if (other.hasTextureURL()) {
            bitField0_ |= 0x00000001;
            textureURL_ = other.textureURL_;
            onChanged();
          }
          if (other.hasWrap()) {
            setWrap(other.getWrap());
          }
          if (other.hasColorable()) {
            setColorable(other.getColorable());
          }
          if (other.hasTextureWidth()) {
            setTextureWidth(other.getTextureWidth());
          }
          if (other.hasTextureHeight()) {
            setTextureHeight(other.getTextureHeight());
          }
          if (other.hasTexCoordFunction()) {
            setTexCoordFunction(other.getTexCoordFunction());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTextureURL()) {
            
            return false;
          }
          if (!hasColorable()) {
            
            return false;
          }
          if (!hasTextureWidth()) {
            
            return false;
          }
          if (!hasTextureHeight()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object textureURL_ = "";
        /**
         * <code>required string textureURL = 1;</code>
         *
         * <pre>
         * url of the texture image, can be relative 
         * </pre>
         */
        public boolean hasTextureURL() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string textureURL = 1;</code>
         *
         * <pre>
         * url of the texture image, can be relative 
         * </pre>
         */
        public java.lang.String getTextureURL() {
          java.lang.Object ref = textureURL_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              textureURL_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string textureURL = 1;</code>
         *
         * <pre>
         * url of the texture image, can be relative 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTextureURLBytes() {
          java.lang.Object ref = textureURL_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            textureURL_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string textureURL = 1;</code>
         *
         * <pre>
         * url of the texture image, can be relative 
         * </pre>
         */
        public Builder setTextureURL(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          textureURL_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string textureURL = 1;</code>
         *
         * <pre>
         * url of the texture image, can be relative 
         * </pre>
         */
        public Builder clearTextureURL() {
          bitField0_ = (bitField0_ & ~0x00000001);
          textureURL_ = getDefaultInstance().getTextureURL();
          onChanged();
          return this;
        }
        /**
         * <code>required string textureURL = 1;</code>
         *
         * <pre>
         * url of the texture image, can be relative 
         * </pre>
         */
        public Builder setTextureURLBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          textureURL_ = value;
          onChanged();
          return this;
        }

        private org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap wrap_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap.REPEAT;
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
         *
         * <pre>
         * how the texture behaves for texture coordinates
         * less than 0 or greater than 1 
         * </pre>
         */
        public boolean hasWrap() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
         *
         * <pre>
         * how the texture behaves for texture coordinates
         * less than 0 or greater than 1 
         * </pre>
         */
        public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap getWrap() {
          return wrap_;
        }
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
         *
         * <pre>
         * how the texture behaves for texture coordinates
         * less than 0 or greater than 1 
         * </pre>
         */
        public Builder setWrap(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          wrap_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.Wrap wrap = 2 [default = REPEAT];</code>
         *
         * <pre>
         * how the texture behaves for texture coordinates
         * less than 0 or greater than 1 
         * </pre>
         */
        public Builder clearWrap() {
          bitField0_ = (bitField0_ & ~0x00000002);
          wrap_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Wrap.REPEAT;
          onChanged();
          return this;
        }

        private boolean colorable_ ;
        /**
         * <code>required bool colorable = 3;</code>
         *
         * <pre>
         * whether the texture should be multiplied with the material's base color 
         * </pre>
         */
        public boolean hasColorable() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required bool colorable = 3;</code>
         *
         * <pre>
         * whether the texture should be multiplied with the material's base color 
         * </pre>
         */
        public boolean getColorable() {
          return colorable_;
        }
        /**
         * <code>required bool colorable = 3;</code>
         *
         * <pre>
         * whether the texture should be multiplied with the material's base color 
         * </pre>
         */
        public Builder setColorable(boolean value) {
          bitField0_ |= 0x00000004;
          colorable_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool colorable = 3;</code>
         *
         * <pre>
         * whether the texture should be multiplied with the material's base color 
         * </pre>
         */
        public Builder clearColorable() {
          bitField0_ = (bitField0_ & ~0x00000004);
          colorable_ = false;
          onChanged();
          return this;
        }

        private int textureWidth_ ;
        /**
         * <code>required uint32 textureWidth = 4;</code>
         *
         * <pre>
         * width of the texture in millimeters. 
         * </pre>
         */
        public boolean hasTextureWidth() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required uint32 textureWidth = 4;</code>
         *
         * <pre>
         * width of the texture in millimeters. 
         * </pre>
         */
        public int getTextureWidth() {
          return textureWidth_;
        }
        /**
         * <code>required uint32 textureWidth = 4;</code>
         *
         * <pre>
         * width of the texture in millimeters. 
         * </pre>
         */
        public Builder setTextureWidth(int value) {
          bitField0_ |= 0x00000008;
          textureWidth_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 textureWidth = 4;</code>
         *
         * <pre>
         * width of the texture in millimeters. 
         * </pre>
         */
        public Builder clearTextureWidth() {
          bitField0_ = (bitField0_ & ~0x00000008);
          textureWidth_ = 0;
          onChanged();
          return this;
        }

        private int textureHeight_ ;
        /**
         * <code>required uint32 textureHeight = 5;</code>
         *
         * <pre>
         * height of the texture in millimeters. 
         * </pre>
         */
        public boolean hasTextureHeight() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required uint32 textureHeight = 5;</code>
         *
         * <pre>
         * height of the texture in millimeters. 
         * </pre>
         */
        public int getTextureHeight() {
          return textureHeight_;
        }
        /**
         * <code>required uint32 textureHeight = 5;</code>
         *
         * <pre>
         * height of the texture in millimeters. 
         * </pre>
         */
        public Builder setTextureHeight(int value) {
          bitField0_ |= 0x00000010;
          textureHeight_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 textureHeight = 5;</code>
         *
         * <pre>
         * height of the texture in millimeters. 
         * </pre>
         */
        public Builder clearTextureHeight() {
          bitField0_ = (bitField0_ & ~0x00000010);
          textureHeight_ = 0;
          onChanged();
          return this;
        }

        private org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction texCoordFunction_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction.CUSTOM;
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
         */
        public boolean hasTexCoordFunction() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
         */
        public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction getTexCoordFunction() {
          return texCoordFunction_;
        }
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
         */
        public Builder setTexCoordFunction(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          texCoordFunction_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .frontend_pbf.Material.TextureLayer.TexCoordFunction texCoordFunction = 6 [default = CUSTOM];</code>
         */
        public Builder clearTexCoordFunction() {
          bitField0_ = (bitField0_ & ~0x00000020);
          texCoordFunction_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.TexCoordFunction.CUSTOM;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:frontend_pbf.Material.TextureLayer)
      }

      static {
        defaultInstance = new TextureLayer(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:frontend_pbf.Material.TextureLayer)
    }

    private int bitField0_;
    public static final int AMBIENTR_FIELD_NUMBER = 1;
    private int ambientR_;
    /**
     * <code>required uint32 ambientR = 1;</code>
     */
    public boolean hasAmbientR() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 ambientR = 1;</code>
     */
    public int getAmbientR() {
      return ambientR_;
    }

    public static final int AMBIENTG_FIELD_NUMBER = 2;
    private int ambientG_;
    /**
     * <code>required uint32 ambientG = 2;</code>
     */
    public boolean hasAmbientG() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 ambientG = 2;</code>
     */
    public int getAmbientG() {
      return ambientG_;
    }

    public static final int AMBIENTB_FIELD_NUMBER = 3;
    private int ambientB_;
    /**
     * <code>required uint32 ambientB = 3;</code>
     */
    public boolean hasAmbientB() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 ambientB = 3;</code>
     */
    public int getAmbientB() {
      return ambientB_;
    }

    public static final int DIFFUSER_FIELD_NUMBER = 4;
    private int diffuseR_;
    /**
     * <code>required uint32 diffuseR = 4;</code>
     */
    public boolean hasDiffuseR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 diffuseR = 4;</code>
     */
    public int getDiffuseR() {
      return diffuseR_;
    }

    public static final int DIFFUSEG_FIELD_NUMBER = 5;
    private int diffuseG_;
    /**
     * <code>required uint32 diffuseG = 5;</code>
     */
    public boolean hasDiffuseG() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 diffuseG = 5;</code>
     */
    public int getDiffuseG() {
      return diffuseG_;
    }

    public static final int DIFFUSEB_FIELD_NUMBER = 6;
    private int diffuseB_;
    /**
     * <code>required uint32 diffuseB = 6;</code>
     */
    public boolean hasDiffuseB() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 diffuseB = 6;</code>
     */
    public int getDiffuseB() {
      return diffuseB_;
    }

    public static final int SPECULARR_FIELD_NUMBER = 7;
    private int specularR_;
    /**
     * <code>required uint32 specularR = 7;</code>
     */
    public boolean hasSpecularR() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 specularR = 7;</code>
     */
    public int getSpecularR() {
      return specularR_;
    }

    public static final int SPECULARG_FIELD_NUMBER = 8;
    private int specularG_;
    /**
     * <code>required uint32 specularG = 8;</code>
     */
    public boolean hasSpecularG() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint32 specularG = 8;</code>
     */
    public int getSpecularG() {
      return specularG_;
    }

    public static final int SPECULARB_FIELD_NUMBER = 9;
    private int specularB_;
    /**
     * <code>required uint32 specularB = 9;</code>
     */
    public boolean hasSpecularB() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required uint32 specularB = 9;</code>
     */
    public int getSpecularB() {
      return specularB_;
    }

    public static final int SHININESS_FIELD_NUMBER = 10;
    private int shininess_;
    /**
     * <code>required uint32 shininess = 10;</code>
     */
    public boolean hasShininess() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required uint32 shininess = 10;</code>
     */
    public int getShininess() {
      return shininess_;
    }

    public static final int TEXTURELAYER_FIELD_NUMBER = 11;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer> textureLayer_;
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer> getTextureLayerList() {
      return textureLayer_;
    }
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder> 
        getTextureLayerOrBuilderList() {
      return textureLayer_;
    }
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    public int getTextureLayerCount() {
      return textureLayer_.size();
    }
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer getTextureLayer(int index) {
      return textureLayer_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
     *
     * <pre>
     * texture layers, ordered from bottom to top 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder getTextureLayerOrBuilder(
        int index) {
      return textureLayer_.get(index);
    }

    public static final int TRANSPARENCY_FIELD_NUMBER = 16;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency transparency_;
    /**
     * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
     *
     * <pre>
     * the type of transparency 
     * </pre>
     */
    public boolean hasTransparency() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
     *
     * <pre>
     * the type of transparency 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency getTransparency() {
      return transparency_;
    }

    public static final int CASTSHADOW_FIELD_NUMBER = 17;
    private boolean castShadow_;
    /**
     * <code>optional bool castShadow = 17 [default = true];</code>
     *
     * <pre>
     * whether this material casts shadows 
     * </pre>
     */
    public boolean hasCastShadow() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool castShadow = 17 [default = true];</code>
     *
     * <pre>
     * whether this material casts shadows 
     * </pre>
     */
    public boolean getCastShadow() {
      return castShadow_;
    }

    private void initFields() {
      ambientR_ = 0;
      ambientG_ = 0;
      ambientB_ = 0;
      diffuseR_ = 0;
      diffuseG_ = 0;
      diffuseB_ = 0;
      specularR_ = 0;
      specularG_ = 0;
      specularB_ = 0;
      shininess_ = 0;
      textureLayer_ = java.util.Collections.emptyList();
      transparency_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency.FALSE;
      castShadow_ = true;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAmbientR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmbientG()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmbientB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDiffuseR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDiffuseG()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDiffuseB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpecularR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpecularG()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpecularB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShininess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTextureLayerCount(); i++) {
        if (!getTextureLayer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ambientR_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ambientG_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ambientB_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, diffuseR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, diffuseG_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, diffuseB_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, specularR_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, specularG_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, specularB_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, shininess_);
      }
      for (int i = 0; i < textureLayer_.size(); i++) {
        output.writeMessage(11, textureLayer_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(16, transparency_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(17, castShadow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ambientR_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ambientG_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ambientB_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, diffuseR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, diffuseG_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, diffuseB_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, specularR_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, specularG_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, specularB_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, shininess_);
      }
      for (int i = 0; i < textureLayer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, textureLayer_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, transparency_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, castShadow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.Material}
     *
     * <pre>
     * a set of material properties, using RGB colors.
     * Color components are in the range [0, 255]. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.Material)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTextureLayerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ambientR_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ambientG_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ambientB_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        diffuseR_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        diffuseG_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        diffuseB_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        specularR_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        specularG_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        specularB_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        shininess_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (textureLayerBuilder_ == null) {
          textureLayer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          textureLayerBuilder_.clear();
        }
        transparency_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency.FALSE;
        bitField0_ = (bitField0_ & ~0x00000800);
        castShadow_ = true;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Material_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Material result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Material result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.Material(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ambientR_ = ambientR_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ambientG_ = ambientG_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ambientB_ = ambientB_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.diffuseR_ = diffuseR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.diffuseG_ = diffuseG_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.diffuseB_ = diffuseB_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.specularR_ = specularR_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.specularG_ = specularG_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.specularB_ = specularB_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.shininess_ = shininess_;
        if (textureLayerBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            textureLayer_ = java.util.Collections.unmodifiableList(textureLayer_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.textureLayer_ = textureLayer_;
        } else {
          result.textureLayer_ = textureLayerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.transparency_ = transparency_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.castShadow_ = castShadow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.Material) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.Material)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.getDefaultInstance()) return this;
        if (other.hasAmbientR()) {
          setAmbientR(other.getAmbientR());
        }
        if (other.hasAmbientG()) {
          setAmbientG(other.getAmbientG());
        }
        if (other.hasAmbientB()) {
          setAmbientB(other.getAmbientB());
        }
        if (other.hasDiffuseR()) {
          setDiffuseR(other.getDiffuseR());
        }
        if (other.hasDiffuseG()) {
          setDiffuseG(other.getDiffuseG());
        }
        if (other.hasDiffuseB()) {
          setDiffuseB(other.getDiffuseB());
        }
        if (other.hasSpecularR()) {
          setSpecularR(other.getSpecularR());
        }
        if (other.hasSpecularG()) {
          setSpecularG(other.getSpecularG());
        }
        if (other.hasSpecularB()) {
          setSpecularB(other.getSpecularB());
        }
        if (other.hasShininess()) {
          setShininess(other.getShininess());
        }
        if (textureLayerBuilder_ == null) {
          if (!other.textureLayer_.isEmpty()) {
            if (textureLayer_.isEmpty()) {
              textureLayer_ = other.textureLayer_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureTextureLayerIsMutable();
              textureLayer_.addAll(other.textureLayer_);
            }
            onChanged();
          }
        } else {
          if (!other.textureLayer_.isEmpty()) {
            if (textureLayerBuilder_.isEmpty()) {
              textureLayerBuilder_.dispose();
              textureLayerBuilder_ = null;
              textureLayer_ = other.textureLayer_;
              bitField0_ = (bitField0_ & ~0x00000400);
              textureLayerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTextureLayerFieldBuilder() : null;
            } else {
              textureLayerBuilder_.addAllMessages(other.textureLayer_);
            }
          }
        }
        if (other.hasTransparency()) {
          setTransparency(other.getTransparency());
        }
        if (other.hasCastShadow()) {
          setCastShadow(other.getCastShadow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAmbientR()) {
          
          return false;
        }
        if (!hasAmbientG()) {
          
          return false;
        }
        if (!hasAmbientB()) {
          
          return false;
        }
        if (!hasDiffuseR()) {
          
          return false;
        }
        if (!hasDiffuseG()) {
          
          return false;
        }
        if (!hasDiffuseB()) {
          
          return false;
        }
        if (!hasSpecularR()) {
          
          return false;
        }
        if (!hasSpecularG()) {
          
          return false;
        }
        if (!hasSpecularB()) {
          
          return false;
        }
        if (!hasShininess()) {
          
          return false;
        }
        for (int i = 0; i < getTextureLayerCount(); i++) {
          if (!getTextureLayer(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Material parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.Material) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ambientR_ ;
      /**
       * <code>required uint32 ambientR = 1;</code>
       */
      public boolean hasAmbientR() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 ambientR = 1;</code>
       */
      public int getAmbientR() {
        return ambientR_;
      }
      /**
       * <code>required uint32 ambientR = 1;</code>
       */
      public Builder setAmbientR(int value) {
        bitField0_ |= 0x00000001;
        ambientR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 ambientR = 1;</code>
       */
      public Builder clearAmbientR() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ambientR_ = 0;
        onChanged();
        return this;
      }

      private int ambientG_ ;
      /**
       * <code>required uint32 ambientG = 2;</code>
       */
      public boolean hasAmbientG() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 ambientG = 2;</code>
       */
      public int getAmbientG() {
        return ambientG_;
      }
      /**
       * <code>required uint32 ambientG = 2;</code>
       */
      public Builder setAmbientG(int value) {
        bitField0_ |= 0x00000002;
        ambientG_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 ambientG = 2;</code>
       */
      public Builder clearAmbientG() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ambientG_ = 0;
        onChanged();
        return this;
      }

      private int ambientB_ ;
      /**
       * <code>required uint32 ambientB = 3;</code>
       */
      public boolean hasAmbientB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 ambientB = 3;</code>
       */
      public int getAmbientB() {
        return ambientB_;
      }
      /**
       * <code>required uint32 ambientB = 3;</code>
       */
      public Builder setAmbientB(int value) {
        bitField0_ |= 0x00000004;
        ambientB_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 ambientB = 3;</code>
       */
      public Builder clearAmbientB() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ambientB_ = 0;
        onChanged();
        return this;
      }

      private int diffuseR_ ;
      /**
       * <code>required uint32 diffuseR = 4;</code>
       */
      public boolean hasDiffuseR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 diffuseR = 4;</code>
       */
      public int getDiffuseR() {
        return diffuseR_;
      }
      /**
       * <code>required uint32 diffuseR = 4;</code>
       */
      public Builder setDiffuseR(int value) {
        bitField0_ |= 0x00000008;
        diffuseR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 diffuseR = 4;</code>
       */
      public Builder clearDiffuseR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        diffuseR_ = 0;
        onChanged();
        return this;
      }

      private int diffuseG_ ;
      /**
       * <code>required uint32 diffuseG = 5;</code>
       */
      public boolean hasDiffuseG() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 diffuseG = 5;</code>
       */
      public int getDiffuseG() {
        return diffuseG_;
      }
      /**
       * <code>required uint32 diffuseG = 5;</code>
       */
      public Builder setDiffuseG(int value) {
        bitField0_ |= 0x00000010;
        diffuseG_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 diffuseG = 5;</code>
       */
      public Builder clearDiffuseG() {
        bitField0_ = (bitField0_ & ~0x00000010);
        diffuseG_ = 0;
        onChanged();
        return this;
      }

      private int diffuseB_ ;
      /**
       * <code>required uint32 diffuseB = 6;</code>
       */
      public boolean hasDiffuseB() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 diffuseB = 6;</code>
       */
      public int getDiffuseB() {
        return diffuseB_;
      }
      /**
       * <code>required uint32 diffuseB = 6;</code>
       */
      public Builder setDiffuseB(int value) {
        bitField0_ |= 0x00000020;
        diffuseB_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 diffuseB = 6;</code>
       */
      public Builder clearDiffuseB() {
        bitField0_ = (bitField0_ & ~0x00000020);
        diffuseB_ = 0;
        onChanged();
        return this;
      }

      private int specularR_ ;
      /**
       * <code>required uint32 specularR = 7;</code>
       */
      public boolean hasSpecularR() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 specularR = 7;</code>
       */
      public int getSpecularR() {
        return specularR_;
      }
      /**
       * <code>required uint32 specularR = 7;</code>
       */
      public Builder setSpecularR(int value) {
        bitField0_ |= 0x00000040;
        specularR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 specularR = 7;</code>
       */
      public Builder clearSpecularR() {
        bitField0_ = (bitField0_ & ~0x00000040);
        specularR_ = 0;
        onChanged();
        return this;
      }

      private int specularG_ ;
      /**
       * <code>required uint32 specularG = 8;</code>
       */
      public boolean hasSpecularG() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required uint32 specularG = 8;</code>
       */
      public int getSpecularG() {
        return specularG_;
      }
      /**
       * <code>required uint32 specularG = 8;</code>
       */
      public Builder setSpecularG(int value) {
        bitField0_ |= 0x00000080;
        specularG_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 specularG = 8;</code>
       */
      public Builder clearSpecularG() {
        bitField0_ = (bitField0_ & ~0x00000080);
        specularG_ = 0;
        onChanged();
        return this;
      }

      private int specularB_ ;
      /**
       * <code>required uint32 specularB = 9;</code>
       */
      public boolean hasSpecularB() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required uint32 specularB = 9;</code>
       */
      public int getSpecularB() {
        return specularB_;
      }
      /**
       * <code>required uint32 specularB = 9;</code>
       */
      public Builder setSpecularB(int value) {
        bitField0_ |= 0x00000100;
        specularB_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 specularB = 9;</code>
       */
      public Builder clearSpecularB() {
        bitField0_ = (bitField0_ & ~0x00000100);
        specularB_ = 0;
        onChanged();
        return this;
      }

      private int shininess_ ;
      /**
       * <code>required uint32 shininess = 10;</code>
       */
      public boolean hasShininess() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required uint32 shininess = 10;</code>
       */
      public int getShininess() {
        return shininess_;
      }
      /**
       * <code>required uint32 shininess = 10;</code>
       */
      public Builder setShininess(int value) {
        bitField0_ |= 0x00000200;
        shininess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 shininess = 10;</code>
       */
      public Builder clearShininess() {
        bitField0_ = (bitField0_ & ~0x00000200);
        shininess_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer> textureLayer_ =
        java.util.Collections.emptyList();
      private void ensureTextureLayerIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          textureLayer_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer>(textureLayer_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder> textureLayerBuilder_;

      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer> getTextureLayerList() {
        if (textureLayerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(textureLayer_);
        } else {
          return textureLayerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public int getTextureLayerCount() {
        if (textureLayerBuilder_ == null) {
          return textureLayer_.size();
        } else {
          return textureLayerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer getTextureLayer(int index) {
        if (textureLayerBuilder_ == null) {
          return textureLayer_.get(index);
        } else {
          return textureLayerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder setTextureLayer(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer value) {
        if (textureLayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextureLayerIsMutable();
          textureLayer_.set(index, value);
          onChanged();
        } else {
          textureLayerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder setTextureLayer(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder builderForValue) {
        if (textureLayerBuilder_ == null) {
          ensureTextureLayerIsMutable();
          textureLayer_.set(index, builderForValue.build());
          onChanged();
        } else {
          textureLayerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder addTextureLayer(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer value) {
        if (textureLayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextureLayerIsMutable();
          textureLayer_.add(value);
          onChanged();
        } else {
          textureLayerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder addTextureLayer(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer value) {
        if (textureLayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextureLayerIsMutable();
          textureLayer_.add(index, value);
          onChanged();
        } else {
          textureLayerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder addTextureLayer(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder builderForValue) {
        if (textureLayerBuilder_ == null) {
          ensureTextureLayerIsMutable();
          textureLayer_.add(builderForValue.build());
          onChanged();
        } else {
          textureLayerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder addTextureLayer(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder builderForValue) {
        if (textureLayerBuilder_ == null) {
          ensureTextureLayerIsMutable();
          textureLayer_.add(index, builderForValue.build());
          onChanged();
        } else {
          textureLayerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder addAllTextureLayer(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer> values) {
        if (textureLayerBuilder_ == null) {
          ensureTextureLayerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, textureLayer_);
          onChanged();
        } else {
          textureLayerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder clearTextureLayer() {
        if (textureLayerBuilder_ == null) {
          textureLayer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          textureLayerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public Builder removeTextureLayer(int index) {
        if (textureLayerBuilder_ == null) {
          ensureTextureLayerIsMutable();
          textureLayer_.remove(index);
          onChanged();
        } else {
          textureLayerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder getTextureLayerBuilder(
          int index) {
        return getTextureLayerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder getTextureLayerOrBuilder(
          int index) {
        if (textureLayerBuilder_ == null) {
          return textureLayer_.get(index);  } else {
          return textureLayerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder> 
           getTextureLayerOrBuilderList() {
        if (textureLayerBuilder_ != null) {
          return textureLayerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(textureLayer_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder addTextureLayerBuilder() {
        return getTextureLayerFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder addTextureLayerBuilder(
          int index) {
        return getTextureLayerFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.Material.TextureLayer textureLayer = 11;</code>
       *
       * <pre>
       * texture layers, ordered from bottom to top 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder> 
           getTextureLayerBuilderList() {
        return getTextureLayerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder> 
          getTextureLayerFieldBuilder() {
        if (textureLayerBuilder_ == null) {
          textureLayerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayer.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.TextureLayerOrBuilder>(
                  textureLayer_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          textureLayer_ = null;
        }
        return textureLayerBuilder_;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency transparency_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency.FALSE;
      /**
       * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
       *
       * <pre>
       * the type of transparency 
       * </pre>
       */
      public boolean hasTransparency() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
       *
       * <pre>
       * the type of transparency 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency getTransparency() {
        return transparency_;
      }
      /**
       * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
       *
       * <pre>
       * the type of transparency 
       * </pre>
       */
      public Builder setTransparency(org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        transparency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .frontend_pbf.Material.Transparency transparency = 16 [default = FALSE];</code>
       *
       * <pre>
       * the type of transparency 
       * </pre>
       */
      public Builder clearTransparency() {
        bitField0_ = (bitField0_ & ~0x00000800);
        transparency_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Material.Transparency.FALSE;
        onChanged();
        return this;
      }

      private boolean castShadow_ = true;
      /**
       * <code>optional bool castShadow = 17 [default = true];</code>
       *
       * <pre>
       * whether this material casts shadows 
       * </pre>
       */
      public boolean hasCastShadow() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool castShadow = 17 [default = true];</code>
       *
       * <pre>
       * whether this material casts shadows 
       * </pre>
       */
      public boolean getCastShadow() {
        return castShadow_;
      }
      /**
       * <code>optional bool castShadow = 17 [default = true];</code>
       *
       * <pre>
       * whether this material casts shadows 
       * </pre>
       */
      public Builder setCastShadow(boolean value) {
        bitField0_ |= 0x00001000;
        castShadow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool castShadow = 17 [default = true];</code>
       *
       * <pre>
       * whether this material casts shadows 
       * </pre>
       */
      public Builder clearCastShadow() {
        bitField0_ = (bitField0_ & ~0x00001000);
        castShadow_ = true;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.Material)
    }

    static {
      defaultInstance = new Material(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.Material)
  }

  public interface ModelBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.ModelBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> 
        getModelsList();
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject getModels(int index);
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    int getModelsCount();
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
        getModelsOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder getModelsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.ModelBlock}
   *
   * <pre>
   * a block containing all template models used in this file.
   * Each model is represented as a WorldObject with no id or type.
   * A template model must not use InstanceGeometry itself. 
   * </pre>
   */
  public static final class ModelBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.ModelBlock)
      ModelBlockOrBuilder {
    // Use ModelBlock.newBuilder() to construct.
    private ModelBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ModelBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ModelBlock defaultInstance;
    public static ModelBlock getDefaultInstance() {
      return defaultInstance;
    }

    public ModelBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ModelBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                models_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              models_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          models_ = java.util.Collections.unmodifiableList(models_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ModelBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ModelBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<ModelBlock> PARSER =
        new com.google.protobuf.AbstractParser<ModelBlock>() {
      public ModelBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ModelBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ModelBlock> getParserForType() {
      return PARSER;
    }

    public static final int MODELS_FIELD_NUMBER = 1;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> models_;
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> getModelsList() {
      return models_;
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
        getModelsOrBuilderList() {
      return models_;
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    public int getModelsCount() {
      return models_.size();
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject getModels(int index) {
      return models_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
     *
     * <pre>
     * the template models that can be copied (with slight variations) in multiple locations 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder getModelsOrBuilder(
        int index) {
      return models_.get(index);
    }

    private void initFields() {
      models_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getModelsCount(); i++) {
        if (!getModels(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < models_.size(); i++) {
        output.writeMessage(1, models_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < models_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, models_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.ModelBlock}
     *
     * <pre>
     * a block containing all template models used in this file.
     * Each model is represented as a WorldObject with no id or type.
     * A template model must not use InstanceGeometry itself. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.ModelBlock)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ModelBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ModelBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModelsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (modelsBuilder_ == null) {
          models_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          modelsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ModelBlock_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock(this);
        int from_bitField0_ = bitField0_;
        if (modelsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            models_ = java.util.Collections.unmodifiableList(models_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.models_ = models_;
        } else {
          result.models_ = modelsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.getDefaultInstance()) return this;
        if (modelsBuilder_ == null) {
          if (!other.models_.isEmpty()) {
            if (models_.isEmpty()) {
              models_ = other.models_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureModelsIsMutable();
              models_.addAll(other.models_);
            }
            onChanged();
          }
        } else {
          if (!other.models_.isEmpty()) {
            if (modelsBuilder_.isEmpty()) {
              modelsBuilder_.dispose();
              modelsBuilder_ = null;
              models_ = other.models_;
              bitField0_ = (bitField0_ & ~0x00000001);
              modelsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModelsFieldBuilder() : null;
            } else {
              modelsBuilder_.addAllMessages(other.models_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getModelsCount(); i++) {
          if (!getModels(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> models_ =
        java.util.Collections.emptyList();
      private void ensureModelsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          models_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject>(models_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> modelsBuilder_;

      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> getModelsList() {
        if (modelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(models_);
        } else {
          return modelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public int getModelsCount() {
        if (modelsBuilder_ == null) {
          return models_.size();
        } else {
          return modelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject getModels(int index) {
        if (modelsBuilder_ == null) {
          return models_.get(index);
        } else {
          return modelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder setModels(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject value) {
        if (modelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelsIsMutable();
          models_.set(index, value);
          onChanged();
        } else {
          modelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder setModels(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder builderForValue) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.set(index, builderForValue.build());
          onChanged();
        } else {
          modelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder addModels(org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject value) {
        if (modelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelsIsMutable();
          models_.add(value);
          onChanged();
        } else {
          modelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder addModels(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject value) {
        if (modelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelsIsMutable();
          models_.add(index, value);
          onChanged();
        } else {
          modelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder addModels(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder builderForValue) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.add(builderForValue.build());
          onChanged();
        } else {
          modelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder addModels(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder builderForValue) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.add(index, builderForValue.build());
          onChanged();
        } else {
          modelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder addAllModels(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> values) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, models_);
          onChanged();
        } else {
          modelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder clearModels() {
        if (modelsBuilder_ == null) {
          models_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          modelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public Builder removeModels(int index) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.remove(index);
          onChanged();
        } else {
          modelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder getModelsBuilder(
          int index) {
        return getModelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder getModelsOrBuilder(
          int index) {
        if (modelsBuilder_ == null) {
          return models_.get(index);  } else {
          return modelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
           getModelsOrBuilderList() {
        if (modelsBuilder_ != null) {
          return modelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(models_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder addModelsBuilder() {
        return getModelsFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder addModelsBuilder(
          int index) {
        return getModelsFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject models = 1;</code>
       *
       * <pre>
       * the template models that can be copied (with slight variations) in multiple locations 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder> 
           getModelsBuilderList() {
        return getModelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
          getModelsFieldBuilder() {
        if (modelsBuilder_ == null) {
          modelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder>(
                  models_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          models_ = null;
        }
        return modelsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.ModelBlock)
    }

    static {
      defaultInstance = new ModelBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.ModelBlock)
  }

  public interface TriangleGeometryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.TriangleGeometry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    boolean hasMaterial();
    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    int getMaterial();

    /**
     * <code>repeated uint64 vertices = 2 [packed = true];</code>
     *
     * <pre>
     * vertices of the triangles, represented as
     * 3 references to the Vector3d block each.
     * At least 1 triangle (i.e. 3 vertex references) required. 
     * </pre>
     */
    java.util.List<java.lang.Long> getVerticesList();
    /**
     * <code>repeated uint64 vertices = 2 [packed = true];</code>
     *
     * <pre>
     * vertices of the triangles, represented as
     * 3 references to the Vector3d block each.
     * At least 1 triangle (i.e. 3 vertex references) required. 
     * </pre>
     */
    int getVerticesCount();
    /**
     * <code>repeated uint64 vertices = 2 [packed = true];</code>
     *
     * <pre>
     * vertices of the triangles, represented as
     * 3 references to the Vector3d block each.
     * At least 1 triangle (i.e. 3 vertex references) required. 
     * </pre>
     */
    long getVertices(int index);

    /**
     * <code>repeated uint64 texCoords = 3 [packed = true];</code>
     *
     * <pre>
     * texture coordinates for each vertex of the triangles,
     * referencing the Vector2d block.
     * Texture coordinates are only provided for those layers
     * which are using the CUSTOM texture coordinate function (see Material).
     * The length of this list is that of
     * vertices, times the number of CUSTOM-coordinated texture layers.
     * Starts with all vertices' tex coords for layer 0, then 1 etc. 
     * </pre>
     */
    java.util.List<java.lang.Long> getTexCoordsList();
    /**
     * <code>repeated uint64 texCoords = 3 [packed = true];</code>
     *
     * <pre>
     * texture coordinates for each vertex of the triangles,
     * referencing the Vector2d block.
     * Texture coordinates are only provided for those layers
     * which are using the CUSTOM texture coordinate function (see Material).
     * The length of this list is that of
     * vertices, times the number of CUSTOM-coordinated texture layers.
     * Starts with all vertices' tex coords for layer 0, then 1 etc. 
     * </pre>
     */
    int getTexCoordsCount();
    /**
     * <code>repeated uint64 texCoords = 3 [packed = true];</code>
     *
     * <pre>
     * texture coordinates for each vertex of the triangles,
     * referencing the Vector2d block.
     * Texture coordinates are only provided for those layers
     * which are using the CUSTOM texture coordinate function (see Material).
     * The length of this list is that of
     * vertices, times the number of CUSTOM-coordinated texture layers.
     * Starts with all vertices' tex coords for layer 0, then 1 etc. 
     * </pre>
     */
    long getTexCoords(int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.TriangleGeometry}
   *
   * <pre>
   * geometry consisting of a set of triangles 
   * </pre>
   */
  public static final class TriangleGeometry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.TriangleGeometry)
      TriangleGeometryOrBuilder {
    // Use TriangleGeometry.newBuilder() to construct.
    private TriangleGeometry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TriangleGeometry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TriangleGeometry defaultInstance;
    public static TriangleGeometry getDefaultInstance() {
      return defaultInstance;
    }

    public TriangleGeometry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TriangleGeometry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              material_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                vertices_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              vertices_.add(input.readUInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                vertices_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                vertices_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                texCoords_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              texCoords_.add(input.readUInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                texCoords_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                texCoords_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          vertices_ = java.util.Collections.unmodifiableList(vertices_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          texCoords_ = java.util.Collections.unmodifiableList(texCoords_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_TriangleGeometry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_TriangleGeometry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder.class);
    }

    public static com.google.protobuf.Parser<TriangleGeometry> PARSER =
        new com.google.protobuf.AbstractParser<TriangleGeometry>() {
      public TriangleGeometry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TriangleGeometry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TriangleGeometry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MATERIAL_FIELD_NUMBER = 1;
    private int material_;
    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    public boolean hasMaterial() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    public int getMaterial() {
      return material_;
    }

    public static final int VERTICES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> vertices_;
    /**
     * <code>repeated uint64 vertices = 2 [packed = true];</code>
     *
     * <pre>
     * vertices of the triangles, represented as
     * 3 references to the Vector3d block each.
     * At least 1 triangle (i.e. 3 vertex references) required. 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getVerticesList() {
      return vertices_;
    }
    /**
     * <code>repeated uint64 vertices = 2 [packed = true];</code>
     *
     * <pre>
     * vertices of the triangles, represented as
     * 3 references to the Vector3d block each.
     * At least 1 triangle (i.e. 3 vertex references) required. 
     * </pre>
     */
    public int getVerticesCount() {
      return vertices_.size();
    }
    /**
     * <code>repeated uint64 vertices = 2 [packed = true];</code>
     *
     * <pre>
     * vertices of the triangles, represented as
     * 3 references to the Vector3d block each.
     * At least 1 triangle (i.e. 3 vertex references) required. 
     * </pre>
     */
    public long getVertices(int index) {
      return vertices_.get(index);
    }
    private int verticesMemoizedSerializedSize = -1;

    public static final int TEXCOORDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> texCoords_;
    /**
     * <code>repeated uint64 texCoords = 3 [packed = true];</code>
     *
     * <pre>
     * texture coordinates for each vertex of the triangles,
     * referencing the Vector2d block.
     * Texture coordinates are only provided for those layers
     * which are using the CUSTOM texture coordinate function (see Material).
     * The length of this list is that of
     * vertices, times the number of CUSTOM-coordinated texture layers.
     * Starts with all vertices' tex coords for layer 0, then 1 etc. 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getTexCoordsList() {
      return texCoords_;
    }
    /**
     * <code>repeated uint64 texCoords = 3 [packed = true];</code>
     *
     * <pre>
     * texture coordinates for each vertex of the triangles,
     * referencing the Vector2d block.
     * Texture coordinates are only provided for those layers
     * which are using the CUSTOM texture coordinate function (see Material).
     * The length of this list is that of
     * vertices, times the number of CUSTOM-coordinated texture layers.
     * Starts with all vertices' tex coords for layer 0, then 1 etc. 
     * </pre>
     */
    public int getTexCoordsCount() {
      return texCoords_.size();
    }
    /**
     * <code>repeated uint64 texCoords = 3 [packed = true];</code>
     *
     * <pre>
     * texture coordinates for each vertex of the triangles,
     * referencing the Vector2d block.
     * Texture coordinates are only provided for those layers
     * which are using the CUSTOM texture coordinate function (see Material).
     * The length of this list is that of
     * vertices, times the number of CUSTOM-coordinated texture layers.
     * Starts with all vertices' tex coords for layer 0, then 1 etc. 
     * </pre>
     */
    public long getTexCoords(int index) {
      return texCoords_.get(index);
    }
    private int texCoordsMemoizedSerializedSize = -1;

    private void initFields() {
      material_ = 0;
      vertices_ = java.util.Collections.emptyList();
      texCoords_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMaterial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, material_);
      }
      if (getVerticesList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(verticesMemoizedSerializedSize);
      }
      for (int i = 0; i < vertices_.size(); i++) {
        output.writeUInt64NoTag(vertices_.get(i));
      }
      if (getTexCoordsList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(texCoordsMemoizedSerializedSize);
      }
      for (int i = 0; i < texCoords_.size(); i++) {
        output.writeUInt64NoTag(texCoords_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, material_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vertices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(vertices_.get(i));
        }
        size += dataSize;
        if (!getVerticesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        verticesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < texCoords_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(texCoords_.get(i));
        }
        size += dataSize;
        if (!getTexCoordsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        texCoordsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.TriangleGeometry}
     *
     * <pre>
     * geometry consisting of a set of triangles 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.TriangleGeometry)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_TriangleGeometry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_TriangleGeometry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        material_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vertices_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        texCoords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_TriangleGeometry_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.material_ = material_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          vertices_ = java.util.Collections.unmodifiableList(vertices_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.vertices_ = vertices_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          texCoords_ = java.util.Collections.unmodifiableList(texCoords_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.texCoords_ = texCoords_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.getDefaultInstance()) return this;
        if (other.hasMaterial()) {
          setMaterial(other.getMaterial());
        }
        if (!other.vertices_.isEmpty()) {
          if (vertices_.isEmpty()) {
            vertices_ = other.vertices_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureVerticesIsMutable();
            vertices_.addAll(other.vertices_);
          }
          onChanged();
        }
        if (!other.texCoords_.isEmpty()) {
          if (texCoords_.isEmpty()) {
            texCoords_ = other.texCoords_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTexCoordsIsMutable();
            texCoords_.addAll(other.texCoords_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaterial()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int material_ ;
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public boolean hasMaterial() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public int getMaterial() {
        return material_;
      }
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public Builder setMaterial(int value) {
        bitField0_ |= 0x00000001;
        material_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public Builder clearMaterial() {
        bitField0_ = (bitField0_ & ~0x00000001);
        material_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> vertices_ = java.util.Collections.emptyList();
      private void ensureVerticesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          vertices_ = new java.util.ArrayList<java.lang.Long>(vertices_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint64 vertices = 2 [packed = true];</code>
       *
       * <pre>
       * vertices of the triangles, represented as
       * 3 references to the Vector3d block each.
       * At least 1 triangle (i.e. 3 vertex references) required. 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getVerticesList() {
        return java.util.Collections.unmodifiableList(vertices_);
      }
      /**
       * <code>repeated uint64 vertices = 2 [packed = true];</code>
       *
       * <pre>
       * vertices of the triangles, represented as
       * 3 references to the Vector3d block each.
       * At least 1 triangle (i.e. 3 vertex references) required. 
       * </pre>
       */
      public int getVerticesCount() {
        return vertices_.size();
      }
      /**
       * <code>repeated uint64 vertices = 2 [packed = true];</code>
       *
       * <pre>
       * vertices of the triangles, represented as
       * 3 references to the Vector3d block each.
       * At least 1 triangle (i.e. 3 vertex references) required. 
       * </pre>
       */
      public long getVertices(int index) {
        return vertices_.get(index);
      }
      /**
       * <code>repeated uint64 vertices = 2 [packed = true];</code>
       *
       * <pre>
       * vertices of the triangles, represented as
       * 3 references to the Vector3d block each.
       * At least 1 triangle (i.e. 3 vertex references) required. 
       * </pre>
       */
      public Builder setVertices(
          int index, long value) {
        ensureVerticesIsMutable();
        vertices_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 vertices = 2 [packed = true];</code>
       *
       * <pre>
       * vertices of the triangles, represented as
       * 3 references to the Vector3d block each.
       * At least 1 triangle (i.e. 3 vertex references) required. 
       * </pre>
       */
      public Builder addVertices(long value) {
        ensureVerticesIsMutable();
        vertices_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 vertices = 2 [packed = true];</code>
       *
       * <pre>
       * vertices of the triangles, represented as
       * 3 references to the Vector3d block each.
       * At least 1 triangle (i.e. 3 vertex references) required. 
       * </pre>
       */
      public Builder addAllVertices(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureVerticesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, vertices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 vertices = 2 [packed = true];</code>
       *
       * <pre>
       * vertices of the triangles, represented as
       * 3 references to the Vector3d block each.
       * At least 1 triangle (i.e. 3 vertex references) required. 
       * </pre>
       */
      public Builder clearVertices() {
        vertices_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> texCoords_ = java.util.Collections.emptyList();
      private void ensureTexCoordsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          texCoords_ = new java.util.ArrayList<java.lang.Long>(texCoords_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint64 texCoords = 3 [packed = true];</code>
       *
       * <pre>
       * texture coordinates for each vertex of the triangles,
       * referencing the Vector2d block.
       * Texture coordinates are only provided for those layers
       * which are using the CUSTOM texture coordinate function (see Material).
       * The length of this list is that of
       * vertices, times the number of CUSTOM-coordinated texture layers.
       * Starts with all vertices' tex coords for layer 0, then 1 etc. 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getTexCoordsList() {
        return java.util.Collections.unmodifiableList(texCoords_);
      }
      /**
       * <code>repeated uint64 texCoords = 3 [packed = true];</code>
       *
       * <pre>
       * texture coordinates for each vertex of the triangles,
       * referencing the Vector2d block.
       * Texture coordinates are only provided for those layers
       * which are using the CUSTOM texture coordinate function (see Material).
       * The length of this list is that of
       * vertices, times the number of CUSTOM-coordinated texture layers.
       * Starts with all vertices' tex coords for layer 0, then 1 etc. 
       * </pre>
       */
      public int getTexCoordsCount() {
        return texCoords_.size();
      }
      /**
       * <code>repeated uint64 texCoords = 3 [packed = true];</code>
       *
       * <pre>
       * texture coordinates for each vertex of the triangles,
       * referencing the Vector2d block.
       * Texture coordinates are only provided for those layers
       * which are using the CUSTOM texture coordinate function (see Material).
       * The length of this list is that of
       * vertices, times the number of CUSTOM-coordinated texture layers.
       * Starts with all vertices' tex coords for layer 0, then 1 etc. 
       * </pre>
       */
      public long getTexCoords(int index) {
        return texCoords_.get(index);
      }
      /**
       * <code>repeated uint64 texCoords = 3 [packed = true];</code>
       *
       * <pre>
       * texture coordinates for each vertex of the triangles,
       * referencing the Vector2d block.
       * Texture coordinates are only provided for those layers
       * which are using the CUSTOM texture coordinate function (see Material).
       * The length of this list is that of
       * vertices, times the number of CUSTOM-coordinated texture layers.
       * Starts with all vertices' tex coords for layer 0, then 1 etc. 
       * </pre>
       */
      public Builder setTexCoords(
          int index, long value) {
        ensureTexCoordsIsMutable();
        texCoords_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 texCoords = 3 [packed = true];</code>
       *
       * <pre>
       * texture coordinates for each vertex of the triangles,
       * referencing the Vector2d block.
       * Texture coordinates are only provided for those layers
       * which are using the CUSTOM texture coordinate function (see Material).
       * The length of this list is that of
       * vertices, times the number of CUSTOM-coordinated texture layers.
       * Starts with all vertices' tex coords for layer 0, then 1 etc. 
       * </pre>
       */
      public Builder addTexCoords(long value) {
        ensureTexCoordsIsMutable();
        texCoords_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 texCoords = 3 [packed = true];</code>
       *
       * <pre>
       * texture coordinates for each vertex of the triangles,
       * referencing the Vector2d block.
       * Texture coordinates are only provided for those layers
       * which are using the CUSTOM texture coordinate function (see Material).
       * The length of this list is that of
       * vertices, times the number of CUSTOM-coordinated texture layers.
       * Starts with all vertices' tex coords for layer 0, then 1 etc. 
       * </pre>
       */
      public Builder addAllTexCoords(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTexCoordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, texCoords_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 texCoords = 3 [packed = true];</code>
       *
       * <pre>
       * texture coordinates for each vertex of the triangles,
       * referencing the Vector2d block.
       * Texture coordinates are only provided for those layers
       * which are using the CUSTOM texture coordinate function (see Material).
       * The length of this list is that of
       * vertices, times the number of CUSTOM-coordinated texture layers.
       * Starts with all vertices' tex coords for layer 0, then 1 etc. 
       * </pre>
       */
      public Builder clearTexCoords() {
        texCoords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.TriangleGeometry)
    }

    static {
      defaultInstance = new TriangleGeometry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.TriangleGeometry)
  }

  public interface ExtrusionGeometryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.ExtrusionGeometry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    boolean hasMaterial();
    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    int getMaterial();

    /**
     * <code>required uint32 shape = 2;</code>
     *
     * <pre>
     * the shape to be extruded, referencing shapeBlock 
     * </pre>
     */
    boolean hasShape();
    /**
     * <code>required uint32 shape = 2;</code>
     *
     * <pre>
     * the shape to be extruded, referencing shapeBlock 
     * </pre>
     */
    int getShape();

    /**
     * <code>repeated uint64 path = 3;</code>
     *
     * <pre>
     * referencing vector3dBlock 
     * </pre>
     */
    java.util.List<java.lang.Long> getPathList();
    /**
     * <code>repeated uint64 path = 3;</code>
     *
     * <pre>
     * referencing vector3dBlock 
     * </pre>
     */
    int getPathCount();
    /**
     * <code>repeated uint64 path = 3;</code>
     *
     * <pre>
     * referencing vector3dBlock 
     * </pre>
     */
    long getPath(int index);

    /**
     * <code>repeated uint64 upVectors = 4;</code>
     *
     * <pre>
     * referencing vector3dBlock. Same length as path. 
     * </pre>
     */
    java.util.List<java.lang.Long> getUpVectorsList();
    /**
     * <code>repeated uint64 upVectors = 4;</code>
     *
     * <pre>
     * referencing vector3dBlock. Same length as path. 
     * </pre>
     */
    int getUpVectorsCount();
    /**
     * <code>repeated uint64 upVectors = 4;</code>
     *
     * <pre>
     * referencing vector3dBlock. Same length as path. 
     * </pre>
     */
    long getUpVectors(int index);

    /**
     * <code>repeated uint64 scaleFactors = 5;</code>
     *
     * <pre>
     * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
     * </pre>
     */
    java.util.List<java.lang.Long> getScaleFactorsList();
    /**
     * <code>repeated uint64 scaleFactors = 5;</code>
     *
     * <pre>
     * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
     * </pre>
     */
    int getScaleFactorsCount();
    /**
     * <code>repeated uint64 scaleFactors = 5;</code>
     *
     * <pre>
     * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
     * </pre>
     */
    long getScaleFactors(int index);

    /**
     * <code>optional bool startCap = 7 [default = false];</code>
     */
    boolean hasStartCap();
    /**
     * <code>optional bool startCap = 7 [default = false];</code>
     */
    boolean getStartCap();

    /**
     * <code>optional bool endCap = 8 [default = false];</code>
     */
    boolean hasEndCap();
    /**
     * <code>optional bool endCap = 8 [default = false];</code>
     */
    boolean getEndCap();
  }
  /**
   * Protobuf type {@code frontend_pbf.ExtrusionGeometry}
   *
   * <pre>
   * geometry produced by extruding a 2d shape.
   *See OSM2World's Target.drawExtrudedShape method for documentation of the parameters. 
   * </pre>
   */
  public static final class ExtrusionGeometry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.ExtrusionGeometry)
      ExtrusionGeometryOrBuilder {
    // Use ExtrusionGeometry.newBuilder() to construct.
    private ExtrusionGeometry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExtrusionGeometry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExtrusionGeometry defaultInstance;
    public static ExtrusionGeometry getDefaultInstance() {
      return defaultInstance;
    }

    public ExtrusionGeometry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExtrusionGeometry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              material_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              shape_ = input.readUInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                path_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              path_.add(input.readUInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                path_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                path_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                upVectors_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              upVectors_.add(input.readUInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                upVectors_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                upVectors_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                scaleFactors_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              scaleFactors_.add(input.readUInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                scaleFactors_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                scaleFactors_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000004;
              startCap_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              endCap_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          path_ = java.util.Collections.unmodifiableList(path_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          upVectors_ = java.util.Collections.unmodifiableList(upVectors_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          scaleFactors_ = java.util.Collections.unmodifiableList(scaleFactors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ExtrusionGeometry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ExtrusionGeometry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder.class);
    }

    public static com.google.protobuf.Parser<ExtrusionGeometry> PARSER =
        new com.google.protobuf.AbstractParser<ExtrusionGeometry>() {
      public ExtrusionGeometry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExtrusionGeometry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExtrusionGeometry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MATERIAL_FIELD_NUMBER = 1;
    private int material_;
    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    public boolean hasMaterial() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 material = 1;</code>
     *
     * <pre>
     * the geometry's material, referencing materialBlock 
     * </pre>
     */
    public int getMaterial() {
      return material_;
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    private int shape_;
    /**
     * <code>required uint32 shape = 2;</code>
     *
     * <pre>
     * the shape to be extruded, referencing shapeBlock 
     * </pre>
     */
    public boolean hasShape() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 shape = 2;</code>
     *
     * <pre>
     * the shape to be extruded, referencing shapeBlock 
     * </pre>
     */
    public int getShape() {
      return shape_;
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> path_;
    /**
     * <code>repeated uint64 path = 3;</code>
     *
     * <pre>
     * referencing vector3dBlock 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getPathList() {
      return path_;
    }
    /**
     * <code>repeated uint64 path = 3;</code>
     *
     * <pre>
     * referencing vector3dBlock 
     * </pre>
     */
    public int getPathCount() {
      return path_.size();
    }
    /**
     * <code>repeated uint64 path = 3;</code>
     *
     * <pre>
     * referencing vector3dBlock 
     * </pre>
     */
    public long getPath(int index) {
      return path_.get(index);
    }

    public static final int UPVECTORS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> upVectors_;
    /**
     * <code>repeated uint64 upVectors = 4;</code>
     *
     * <pre>
     * referencing vector3dBlock. Same length as path. 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getUpVectorsList() {
      return upVectors_;
    }
    /**
     * <code>repeated uint64 upVectors = 4;</code>
     *
     * <pre>
     * referencing vector3dBlock. Same length as path. 
     * </pre>
     */
    public int getUpVectorsCount() {
      return upVectors_.size();
    }
    /**
     * <code>repeated uint64 upVectors = 4;</code>
     *
     * <pre>
     * referencing vector3dBlock. Same length as path. 
     * </pre>
     */
    public long getUpVectors(int index) {
      return upVectors_.get(index);
    }

    public static final int SCALEFACTORS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> scaleFactors_;
    /**
     * <code>repeated uint64 scaleFactors = 5;</code>
     *
     * <pre>
     * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getScaleFactorsList() {
      return scaleFactors_;
    }
    /**
     * <code>repeated uint64 scaleFactors = 5;</code>
     *
     * <pre>
     * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
     * </pre>
     */
    public int getScaleFactorsCount() {
      return scaleFactors_.size();
    }
    /**
     * <code>repeated uint64 scaleFactors = 5;</code>
     *
     * <pre>
     * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
     * </pre>
     */
    public long getScaleFactors(int index) {
      return scaleFactors_.get(index);
    }

    public static final int STARTCAP_FIELD_NUMBER = 7;
    private boolean startCap_;
    /**
     * <code>optional bool startCap = 7 [default = false];</code>
     */
    public boolean hasStartCap() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool startCap = 7 [default = false];</code>
     */
    public boolean getStartCap() {
      return startCap_;
    }

    public static final int ENDCAP_FIELD_NUMBER = 8;
    private boolean endCap_;
    /**
     * <code>optional bool endCap = 8 [default = false];</code>
     */
    public boolean hasEndCap() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool endCap = 8 [default = false];</code>
     */
    public boolean getEndCap() {
      return endCap_;
    }

    private void initFields() {
      material_ = 0;
      shape_ = 0;
      path_ = java.util.Collections.emptyList();
      upVectors_ = java.util.Collections.emptyList();
      scaleFactors_ = java.util.Collections.emptyList();
      startCap_ = false;
      endCap_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMaterial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShape()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, material_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, shape_);
      }
      for (int i = 0; i < path_.size(); i++) {
        output.writeUInt64(3, path_.get(i));
      }
      for (int i = 0; i < upVectors_.size(); i++) {
        output.writeUInt64(4, upVectors_.get(i));
      }
      for (int i = 0; i < scaleFactors_.size(); i++) {
        output.writeUInt64(5, scaleFactors_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(7, startCap_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(8, endCap_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, material_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, shape_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < path_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(path_.get(i));
        }
        size += dataSize;
        size += 1 * getPathList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < upVectors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(upVectors_.get(i));
        }
        size += dataSize;
        size += 1 * getUpVectorsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scaleFactors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(scaleFactors_.get(i));
        }
        size += dataSize;
        size += 1 * getScaleFactorsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, startCap_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, endCap_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.ExtrusionGeometry}
     *
     * <pre>
     * geometry produced by extruding a 2d shape.
     *See OSM2World's Target.drawExtrudedShape method for documentation of the parameters. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.ExtrusionGeometry)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ExtrusionGeometry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ExtrusionGeometry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        material_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        shape_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        path_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        upVectors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        scaleFactors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        startCap_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        endCap_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_ExtrusionGeometry_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.material_ = material_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.shape_ = shape_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          path_ = java.util.Collections.unmodifiableList(path_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.path_ = path_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          upVectors_ = java.util.Collections.unmodifiableList(upVectors_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.upVectors_ = upVectors_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          scaleFactors_ = java.util.Collections.unmodifiableList(scaleFactors_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.scaleFactors_ = scaleFactors_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startCap_ = startCap_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endCap_ = endCap_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.getDefaultInstance()) return this;
        if (other.hasMaterial()) {
          setMaterial(other.getMaterial());
        }
        if (other.hasShape()) {
          setShape(other.getShape());
        }
        if (!other.path_.isEmpty()) {
          if (path_.isEmpty()) {
            path_ = other.path_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePathIsMutable();
            path_.addAll(other.path_);
          }
          onChanged();
        }
        if (!other.upVectors_.isEmpty()) {
          if (upVectors_.isEmpty()) {
            upVectors_ = other.upVectors_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureUpVectorsIsMutable();
            upVectors_.addAll(other.upVectors_);
          }
          onChanged();
        }
        if (!other.scaleFactors_.isEmpty()) {
          if (scaleFactors_.isEmpty()) {
            scaleFactors_ = other.scaleFactors_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureScaleFactorsIsMutable();
            scaleFactors_.addAll(other.scaleFactors_);
          }
          onChanged();
        }
        if (other.hasStartCap()) {
          setStartCap(other.getStartCap());
        }
        if (other.hasEndCap()) {
          setEndCap(other.getEndCap());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaterial()) {
          
          return false;
        }
        if (!hasShape()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int material_ ;
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public boolean hasMaterial() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public int getMaterial() {
        return material_;
      }
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public Builder setMaterial(int value) {
        bitField0_ |= 0x00000001;
        material_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 material = 1;</code>
       *
       * <pre>
       * the geometry's material, referencing materialBlock 
       * </pre>
       */
      public Builder clearMaterial() {
        bitField0_ = (bitField0_ & ~0x00000001);
        material_ = 0;
        onChanged();
        return this;
      }

      private int shape_ ;
      /**
       * <code>required uint32 shape = 2;</code>
       *
       * <pre>
       * the shape to be extruded, referencing shapeBlock 
       * </pre>
       */
      public boolean hasShape() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 shape = 2;</code>
       *
       * <pre>
       * the shape to be extruded, referencing shapeBlock 
       * </pre>
       */
      public int getShape() {
        return shape_;
      }
      /**
       * <code>required uint32 shape = 2;</code>
       *
       * <pre>
       * the shape to be extruded, referencing shapeBlock 
       * </pre>
       */
      public Builder setShape(int value) {
        bitField0_ |= 0x00000002;
        shape_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 shape = 2;</code>
       *
       * <pre>
       * the shape to be extruded, referencing shapeBlock 
       * </pre>
       */
      public Builder clearShape() {
        bitField0_ = (bitField0_ & ~0x00000002);
        shape_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> path_ = java.util.Collections.emptyList();
      private void ensurePathIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          path_ = new java.util.ArrayList<java.lang.Long>(path_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint64 path = 3;</code>
       *
       * <pre>
       * referencing vector3dBlock 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getPathList() {
        return java.util.Collections.unmodifiableList(path_);
      }
      /**
       * <code>repeated uint64 path = 3;</code>
       *
       * <pre>
       * referencing vector3dBlock 
       * </pre>
       */
      public int getPathCount() {
        return path_.size();
      }
      /**
       * <code>repeated uint64 path = 3;</code>
       *
       * <pre>
       * referencing vector3dBlock 
       * </pre>
       */
      public long getPath(int index) {
        return path_.get(index);
      }
      /**
       * <code>repeated uint64 path = 3;</code>
       *
       * <pre>
       * referencing vector3dBlock 
       * </pre>
       */
      public Builder setPath(
          int index, long value) {
        ensurePathIsMutable();
        path_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 path = 3;</code>
       *
       * <pre>
       * referencing vector3dBlock 
       * </pre>
       */
      public Builder addPath(long value) {
        ensurePathIsMutable();
        path_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 path = 3;</code>
       *
       * <pre>
       * referencing vector3dBlock 
       * </pre>
       */
      public Builder addAllPath(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePathIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, path_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 path = 3;</code>
       *
       * <pre>
       * referencing vector3dBlock 
       * </pre>
       */
      public Builder clearPath() {
        path_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> upVectors_ = java.util.Collections.emptyList();
      private void ensureUpVectorsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          upVectors_ = new java.util.ArrayList<java.lang.Long>(upVectors_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint64 upVectors = 4;</code>
       *
       * <pre>
       * referencing vector3dBlock. Same length as path. 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getUpVectorsList() {
        return java.util.Collections.unmodifiableList(upVectors_);
      }
      /**
       * <code>repeated uint64 upVectors = 4;</code>
       *
       * <pre>
       * referencing vector3dBlock. Same length as path. 
       * </pre>
       */
      public int getUpVectorsCount() {
        return upVectors_.size();
      }
      /**
       * <code>repeated uint64 upVectors = 4;</code>
       *
       * <pre>
       * referencing vector3dBlock. Same length as path. 
       * </pre>
       */
      public long getUpVectors(int index) {
        return upVectors_.get(index);
      }
      /**
       * <code>repeated uint64 upVectors = 4;</code>
       *
       * <pre>
       * referencing vector3dBlock. Same length as path. 
       * </pre>
       */
      public Builder setUpVectors(
          int index, long value) {
        ensureUpVectorsIsMutable();
        upVectors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 upVectors = 4;</code>
       *
       * <pre>
       * referencing vector3dBlock. Same length as path. 
       * </pre>
       */
      public Builder addUpVectors(long value) {
        ensureUpVectorsIsMutable();
        upVectors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 upVectors = 4;</code>
       *
       * <pre>
       * referencing vector3dBlock. Same length as path. 
       * </pre>
       */
      public Builder addAllUpVectors(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUpVectorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, upVectors_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 upVectors = 4;</code>
       *
       * <pre>
       * referencing vector3dBlock. Same length as path. 
       * </pre>
       */
      public Builder clearUpVectors() {
        upVectors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> scaleFactors_ = java.util.Collections.emptyList();
      private void ensureScaleFactorsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          scaleFactors_ = new java.util.ArrayList<java.lang.Long>(scaleFactors_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint64 scaleFactors = 5;</code>
       *
       * <pre>
       * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getScaleFactorsList() {
        return java.util.Collections.unmodifiableList(scaleFactors_);
      }
      /**
       * <code>repeated uint64 scaleFactors = 5;</code>
       *
       * <pre>
       * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
       * </pre>
       */
      public int getScaleFactorsCount() {
        return scaleFactors_.size();
      }
      /**
       * <code>repeated uint64 scaleFactors = 5;</code>
       *
       * <pre>
       * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
       * </pre>
       */
      public long getScaleFactors(int index) {
        return scaleFactors_.get(index);
      }
      /**
       * <code>repeated uint64 scaleFactors = 5;</code>
       *
       * <pre>
       * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
       * </pre>
       */
      public Builder setScaleFactors(
          int index, long value) {
        ensureScaleFactorsIsMutable();
        scaleFactors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 scaleFactors = 5;</code>
       *
       * <pre>
       * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
       * </pre>
       */
      public Builder addScaleFactors(long value) {
        ensureScaleFactorsIsMutable();
        scaleFactors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 scaleFactors = 5;</code>
       *
       * <pre>
       * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
       * </pre>
       */
      public Builder addAllScaleFactors(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureScaleFactorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scaleFactors_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 scaleFactors = 5;</code>
       *
       * <pre>
       * multiplicative factor, times 1000. Either omitted (if no scaling is applied) or sam length as path. 
       * </pre>
       */
      public Builder clearScaleFactors() {
        scaleFactors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private boolean startCap_ ;
      /**
       * <code>optional bool startCap = 7 [default = false];</code>
       */
      public boolean hasStartCap() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool startCap = 7 [default = false];</code>
       */
      public boolean getStartCap() {
        return startCap_;
      }
      /**
       * <code>optional bool startCap = 7 [default = false];</code>
       */
      public Builder setStartCap(boolean value) {
        bitField0_ |= 0x00000020;
        startCap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool startCap = 7 [default = false];</code>
       */
      public Builder clearStartCap() {
        bitField0_ = (bitField0_ & ~0x00000020);
        startCap_ = false;
        onChanged();
        return this;
      }

      private boolean endCap_ ;
      /**
       * <code>optional bool endCap = 8 [default = false];</code>
       */
      public boolean hasEndCap() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool endCap = 8 [default = false];</code>
       */
      public boolean getEndCap() {
        return endCap_;
      }
      /**
       * <code>optional bool endCap = 8 [default = false];</code>
       */
      public Builder setEndCap(boolean value) {
        bitField0_ |= 0x00000040;
        endCap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool endCap = 8 [default = false];</code>
       */
      public Builder clearEndCap() {
        bitField0_ = (bitField0_ & ~0x00000040);
        endCap_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.ExtrusionGeometry)
    }

    static {
      defaultInstance = new ExtrusionGeometry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.ExtrusionGeometry)
  }

  public interface InstanceGeometryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.InstanceGeometry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 model = 1;</code>
     *
     * <pre>
     * the prototype model, referencing the modelBlock.
     *Alternatively, an external resource can be referenced using resourceIdentifier. 
     * </pre>
     */
    boolean hasModel();
    /**
     * <code>optional uint32 model = 1;</code>
     *
     * <pre>
     * the prototype model, referencing the modelBlock.
     *Alternatively, an external resource can be referenced using resourceIdentifier. 
     * </pre>
     */
    int getModel();

    /**
     * <code>optional string resourceIdentifier = 5;</code>
     *
     * <pre>
     * string identifying an external model in some way, e.g. as an URI or a string constant.
     *Alternatively, a prototype model included in this file can be referenced using the model field. 
     * </pre>
     */
    boolean hasResourceIdentifier();
    /**
     * <code>optional string resourceIdentifier = 5;</code>
     *
     * <pre>
     * string identifying an external model in some way, e.g. as an URI or a string constant.
     *Alternatively, a prototype model included in this file can be referenced using the model field. 
     * </pre>
     */
    java.lang.String getResourceIdentifier();
    /**
     * <code>optional string resourceIdentifier = 5;</code>
     *
     * <pre>
     * string identifying an external model in some way, e.g. as an URI or a string constant.
     *Alternatively, a prototype model included in this file can be referenced using the model field. 
     * </pre>
     */
    com.google.protobuf.ByteString
        getResourceIdentifierBytes();

    /**
     * <code>repeated sint64 position = 2 [packed = true];</code>
     *
     * <pre>
     * position of each instance.
     *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
     *Each position is represented as an x, y, z triple of values. 
     * </pre>
     */
    java.util.List<java.lang.Long> getPositionList();
    /**
     * <code>repeated sint64 position = 2 [packed = true];</code>
     *
     * <pre>
     * position of each instance.
     *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
     *Each position is represented as an x, y, z triple of values. 
     * </pre>
     */
    int getPositionCount();
    /**
     * <code>repeated sint64 position = 2 [packed = true];</code>
     *
     * <pre>
     * position of each instance.
     *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
     *Each position is represented as an x, y, z triple of values. 
     * </pre>
     */
    long getPosition(int index);

    /**
     * <code>repeated int32 direction = 3 [packed = true];</code>
     *
     * <pre>
     * rotation angle around the y axis for each instance in milliradians, clockwise.
     *Either one third of the length of 'position' or empty (for a default of 0). 
     * </pre>
     */
    java.util.List<java.lang.Integer> getDirectionList();
    /**
     * <code>repeated int32 direction = 3 [packed = true];</code>
     *
     * <pre>
     * rotation angle around the y axis for each instance in milliradians, clockwise.
     *Either one third of the length of 'position' or empty (for a default of 0). 
     * </pre>
     */
    int getDirectionCount();
    /**
     * <code>repeated int32 direction = 3 [packed = true];</code>
     *
     * <pre>
     * rotation angle around the y axis for each instance in milliradians, clockwise.
     *Either one third of the length of 'position' or empty (for a default of 0). 
     * </pre>
     */
    int getDirection(int index);

    /**
     * <code>repeated uint32 scale = 4 [packed = true];</code>
     *
     * <pre>
     * scale factor for each instance in 1/1000.
     *Either one third of the length of 'position' or empty (for a default of 1). 
     * </pre>
     */
    java.util.List<java.lang.Integer> getScaleList();
    /**
     * <code>repeated uint32 scale = 4 [packed = true];</code>
     *
     * <pre>
     * scale factor for each instance in 1/1000.
     *Either one third of the length of 'position' or empty (for a default of 1). 
     * </pre>
     */
    int getScaleCount();
    /**
     * <code>repeated uint32 scale = 4 [packed = true];</code>
     *
     * <pre>
     * scale factor for each instance in 1/1000.
     *Either one third of the length of 'position' or empty (for a default of 1). 
     * </pre>
     */
    int getScale(int index);

    /**
     * <code>optional .frontend_pbf.Animation animation = 6;</code>
     *
     * <pre>
     * this message is present if this geometry is animated 
     * </pre>
     */
    boolean hasAnimation();
    /**
     * <code>optional .frontend_pbf.Animation animation = 6;</code>
     *
     * <pre>
     * this message is present if this geometry is animated 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation getAnimation();
    /**
     * <code>optional .frontend_pbf.Animation animation = 6;</code>
     *
     * <pre>
     * this message is present if this geometry is animated 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.AnimationOrBuilder getAnimationOrBuilder();
  }
  /**
   * Protobuf type {@code frontend_pbf.InstanceGeometry}
   *
   * <pre>
   * copies of some prototype model, possibly rotated and scaled 
   * </pre>
   */
  public static final class InstanceGeometry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.InstanceGeometry)
      InstanceGeometryOrBuilder {
    // Use InstanceGeometry.newBuilder() to construct.
    private InstanceGeometry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InstanceGeometry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InstanceGeometry defaultInstance;
    public static InstanceGeometry getDefaultInstance() {
      return defaultInstance;
    }

    public InstanceGeometry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InstanceGeometry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              model_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                position_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              position_.add(input.readSInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                position_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                position_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                direction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              direction_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                direction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                direction_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                scale_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              scale_.add(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                scale_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                scale_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              resourceIdentifier_ = bs;
              break;
            }
            case 50: {
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = animation_.toBuilder();
              }
              animation_ = input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(animation_);
                animation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          position_ = java.util.Collections.unmodifiableList(position_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          direction_ = java.util.Collections.unmodifiableList(direction_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          scale_ = java.util.Collections.unmodifiableList(scale_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_InstanceGeometry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_InstanceGeometry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder.class);
    }

    public static com.google.protobuf.Parser<InstanceGeometry> PARSER =
        new com.google.protobuf.AbstractParser<InstanceGeometry>() {
      public InstanceGeometry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstanceGeometry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InstanceGeometry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MODEL_FIELD_NUMBER = 1;
    private int model_;
    /**
     * <code>optional uint32 model = 1;</code>
     *
     * <pre>
     * the prototype model, referencing the modelBlock.
     *Alternatively, an external resource can be referenced using resourceIdentifier. 
     * </pre>
     */
    public boolean hasModel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 model = 1;</code>
     *
     * <pre>
     * the prototype model, referencing the modelBlock.
     *Alternatively, an external resource can be referenced using resourceIdentifier. 
     * </pre>
     */
    public int getModel() {
      return model_;
    }

    public static final int RESOURCEIDENTIFIER_FIELD_NUMBER = 5;
    private java.lang.Object resourceIdentifier_;
    /**
     * <code>optional string resourceIdentifier = 5;</code>
     *
     * <pre>
     * string identifying an external model in some way, e.g. as an URI or a string constant.
     *Alternatively, a prototype model included in this file can be referenced using the model field. 
     * </pre>
     */
    public boolean hasResourceIdentifier() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string resourceIdentifier = 5;</code>
     *
     * <pre>
     * string identifying an external model in some way, e.g. as an URI or a string constant.
     *Alternatively, a prototype model included in this file can be referenced using the model field. 
     * </pre>
     */
    public java.lang.String getResourceIdentifier() {
      java.lang.Object ref = resourceIdentifier_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resourceIdentifier_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string resourceIdentifier = 5;</code>
     *
     * <pre>
     * string identifying an external model in some way, e.g. as an URI or a string constant.
     *Alternatively, a prototype model included in this file can be referenced using the model field. 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getResourceIdentifierBytes() {
      java.lang.Object ref = resourceIdentifier_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> position_;
    /**
     * <code>repeated sint64 position = 2 [packed = true];</code>
     *
     * <pre>
     * position of each instance.
     *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
     *Each position is represented as an x, y, z triple of values. 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getPositionList() {
      return position_;
    }
    /**
     * <code>repeated sint64 position = 2 [packed = true];</code>
     *
     * <pre>
     * position of each instance.
     *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
     *Each position is represented as an x, y, z triple of values. 
     * </pre>
     */
    public int getPositionCount() {
      return position_.size();
    }
    /**
     * <code>repeated sint64 position = 2 [packed = true];</code>
     *
     * <pre>
     * position of each instance.
     *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
     *Each position is represented as an x, y, z triple of values. 
     * </pre>
     */
    public long getPosition(int index) {
      return position_.get(index);
    }
    private int positionMemoizedSerializedSize = -1;

    public static final int DIRECTION_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> direction_;
    /**
     * <code>repeated int32 direction = 3 [packed = true];</code>
     *
     * <pre>
     * rotation angle around the y axis for each instance in milliradians, clockwise.
     *Either one third of the length of 'position' or empty (for a default of 0). 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDirectionList() {
      return direction_;
    }
    /**
     * <code>repeated int32 direction = 3 [packed = true];</code>
     *
     * <pre>
     * rotation angle around the y axis for each instance in milliradians, clockwise.
     *Either one third of the length of 'position' or empty (for a default of 0). 
     * </pre>
     */
    public int getDirectionCount() {
      return direction_.size();
    }
    /**
     * <code>repeated int32 direction = 3 [packed = true];</code>
     *
     * <pre>
     * rotation angle around the y axis for each instance in milliradians, clockwise.
     *Either one third of the length of 'position' or empty (for a default of 0). 
     * </pre>
     */
    public int getDirection(int index) {
      return direction_.get(index);
    }
    private int directionMemoizedSerializedSize = -1;

    public static final int SCALE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> scale_;
    /**
     * <code>repeated uint32 scale = 4 [packed = true];</code>
     *
     * <pre>
     * scale factor for each instance in 1/1000.
     *Either one third of the length of 'position' or empty (for a default of 1). 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScaleList() {
      return scale_;
    }
    /**
     * <code>repeated uint32 scale = 4 [packed = true];</code>
     *
     * <pre>
     * scale factor for each instance in 1/1000.
     *Either one third of the length of 'position' or empty (for a default of 1). 
     * </pre>
     */
    public int getScaleCount() {
      return scale_.size();
    }
    /**
     * <code>repeated uint32 scale = 4 [packed = true];</code>
     *
     * <pre>
     * scale factor for each instance in 1/1000.
     *Either one third of the length of 'position' or empty (for a default of 1). 
     * </pre>
     */
    public int getScale(int index) {
      return scale_.get(index);
    }
    private int scaleMemoizedSerializedSize = -1;

    public static final int ANIMATION_FIELD_NUMBER = 6;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation animation_;
    /**
     * <code>optional .frontend_pbf.Animation animation = 6;</code>
     *
     * <pre>
     * this message is present if this geometry is animated 
     * </pre>
     */
    public boolean hasAnimation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .frontend_pbf.Animation animation = 6;</code>
     *
     * <pre>
     * this message is present if this geometry is animated 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation getAnimation() {
      return animation_;
    }
    /**
     * <code>optional .frontend_pbf.Animation animation = 6;</code>
     *
     * <pre>
     * this message is present if this geometry is animated 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.AnimationOrBuilder getAnimationOrBuilder() {
      return animation_;
    }

    private void initFields() {
      model_ = 0;
      resourceIdentifier_ = "";
      position_ = java.util.Collections.emptyList();
      direction_ = java.util.Collections.emptyList();
      scale_ = java.util.Collections.emptyList();
      animation_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasAnimation()) {
        if (!getAnimation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, model_);
      }
      if (getPositionList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(positionMemoizedSerializedSize);
      }
      for (int i = 0; i < position_.size(); i++) {
        output.writeSInt64NoTag(position_.get(i));
      }
      if (getDirectionList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(directionMemoizedSerializedSize);
      }
      for (int i = 0; i < direction_.size(); i++) {
        output.writeInt32NoTag(direction_.get(i));
      }
      if (getScaleList().size() > 0) {
        output.writeRawVarint32(34);
        output.writeRawVarint32(scaleMemoizedSerializedSize);
      }
      for (int i = 0; i < scale_.size(); i++) {
        output.writeUInt32NoTag(scale_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(5, getResourceIdentifierBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(6, animation_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, model_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < position_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(position_.get(i));
        }
        size += dataSize;
        if (!getPositionList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        positionMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < direction_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(direction_.get(i));
        }
        size += dataSize;
        if (!getDirectionList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        directionMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scale_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(scale_.get(i));
        }
        size += dataSize;
        if (!getScaleList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        scaleMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getResourceIdentifierBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, animation_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.InstanceGeometry}
     *
     * <pre>
     * copies of some prototype model, possibly rotated and scaled 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.InstanceGeometry)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_InstanceGeometry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_InstanceGeometry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnimationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        model_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        resourceIdentifier_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        direction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        scale_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (animationBuilder_ == null) {
          animation_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDefaultInstance();
        } else {
          animationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_InstanceGeometry_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.model_ = model_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.resourceIdentifier_ = resourceIdentifier_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          position_ = java.util.Collections.unmodifiableList(position_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.position_ = position_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          direction_ = java.util.Collections.unmodifiableList(direction_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.direction_ = direction_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          scale_ = java.util.Collections.unmodifiableList(scale_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.scale_ = scale_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        if (animationBuilder_ == null) {
          result.animation_ = animation_;
        } else {
          result.animation_ = animationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.getDefaultInstance()) return this;
        if (other.hasModel()) {
          setModel(other.getModel());
        }
        if (other.hasResourceIdentifier()) {
          bitField0_ |= 0x00000002;
          resourceIdentifier_ = other.resourceIdentifier_;
          onChanged();
        }
        if (!other.position_.isEmpty()) {
          if (position_.isEmpty()) {
            position_ = other.position_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePositionIsMutable();
            position_.addAll(other.position_);
          }
          onChanged();
        }
        if (!other.direction_.isEmpty()) {
          if (direction_.isEmpty()) {
            direction_ = other.direction_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDirectionIsMutable();
            direction_.addAll(other.direction_);
          }
          onChanged();
        }
        if (!other.scale_.isEmpty()) {
          if (scale_.isEmpty()) {
            scale_ = other.scale_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureScaleIsMutable();
            scale_.addAll(other.scale_);
          }
          onChanged();
        }
        if (other.hasAnimation()) {
          mergeAnimation(other.getAnimation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasAnimation()) {
          if (!getAnimation().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int model_ ;
      /**
       * <code>optional uint32 model = 1;</code>
       *
       * <pre>
       * the prototype model, referencing the modelBlock.
       *Alternatively, an external resource can be referenced using resourceIdentifier. 
       * </pre>
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 model = 1;</code>
       *
       * <pre>
       * the prototype model, referencing the modelBlock.
       *Alternatively, an external resource can be referenced using resourceIdentifier. 
       * </pre>
       */
      public int getModel() {
        return model_;
      }
      /**
       * <code>optional uint32 model = 1;</code>
       *
       * <pre>
       * the prototype model, referencing the modelBlock.
       *Alternatively, an external resource can be referenced using resourceIdentifier. 
       * </pre>
       */
      public Builder setModel(int value) {
        bitField0_ |= 0x00000001;
        model_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 model = 1;</code>
       *
       * <pre>
       * the prototype model, referencing the modelBlock.
       *Alternatively, an external resource can be referenced using resourceIdentifier. 
       * </pre>
       */
      public Builder clearModel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        model_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object resourceIdentifier_ = "";
      /**
       * <code>optional string resourceIdentifier = 5;</code>
       *
       * <pre>
       * string identifying an external model in some way, e.g. as an URI or a string constant.
       *Alternatively, a prototype model included in this file can be referenced using the model field. 
       * </pre>
       */
      public boolean hasResourceIdentifier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string resourceIdentifier = 5;</code>
       *
       * <pre>
       * string identifying an external model in some way, e.g. as an URI or a string constant.
       *Alternatively, a prototype model included in this file can be referenced using the model field. 
       * </pre>
       */
      public java.lang.String getResourceIdentifier() {
        java.lang.Object ref = resourceIdentifier_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            resourceIdentifier_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string resourceIdentifier = 5;</code>
       *
       * <pre>
       * string identifying an external model in some way, e.g. as an URI or a string constant.
       *Alternatively, a prototype model included in this file can be referenced using the model field. 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getResourceIdentifierBytes() {
        java.lang.Object ref = resourceIdentifier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourceIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string resourceIdentifier = 5;</code>
       *
       * <pre>
       * string identifying an external model in some way, e.g. as an URI or a string constant.
       *Alternatively, a prototype model included in this file can be referenced using the model field. 
       * </pre>
       */
      public Builder setResourceIdentifier(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        resourceIdentifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string resourceIdentifier = 5;</code>
       *
       * <pre>
       * string identifying an external model in some way, e.g. as an URI or a string constant.
       *Alternatively, a prototype model included in this file can be referenced using the model field. 
       * </pre>
       */
      public Builder clearResourceIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resourceIdentifier_ = getDefaultInstance().getResourceIdentifier();
        onChanged();
        return this;
      }
      /**
       * <code>optional string resourceIdentifier = 5;</code>
       *
       * <pre>
       * string identifying an external model in some way, e.g. as an URI or a string constant.
       *Alternatively, a prototype model included in this file can be referenced using the model field. 
       * </pre>
       */
      public Builder setResourceIdentifierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        resourceIdentifier_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> position_ = java.util.Collections.emptyList();
      private void ensurePositionIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          position_ = new java.util.ArrayList<java.lang.Long>(position_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated sint64 position = 2 [packed = true];</code>
       *
       * <pre>
       * position of each instance.
       *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
       *Each position is represented as an x, y, z triple of values. 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getPositionList() {
        return java.util.Collections.unmodifiableList(position_);
      }
      /**
       * <code>repeated sint64 position = 2 [packed = true];</code>
       *
       * <pre>
       * position of each instance.
       *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
       *Each position is represented as an x, y, z triple of values. 
       * </pre>
       */
      public int getPositionCount() {
        return position_.size();
      }
      /**
       * <code>repeated sint64 position = 2 [packed = true];</code>
       *
       * <pre>
       * position of each instance.
       *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
       *Each position is represented as an x, y, z triple of values. 
       * </pre>
       */
      public long getPosition(int index) {
        return position_.get(index);
      }
      /**
       * <code>repeated sint64 position = 2 [packed = true];</code>
       *
       * <pre>
       * position of each instance.
       *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
       *Each position is represented as an x, y, z triple of values. 
       * </pre>
       */
      public Builder setPosition(
          int index, long value) {
        ensurePositionIsMutable();
        position_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 position = 2 [packed = true];</code>
       *
       * <pre>
       * position of each instance.
       *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
       *Each position is represented as an x, y, z triple of values. 
       * </pre>
       */
      public Builder addPosition(long value) {
        ensurePositionIsMutable();
        position_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 position = 2 [packed = true];</code>
       *
       * <pre>
       * position of each instance.
       *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
       *Each position is represented as an x, y, z triple of values. 
       * </pre>
       */
      public Builder addAllPosition(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePositionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, position_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 position = 2 [packed = true];</code>
       *
       * <pre>
       * position of each instance.
       *Values are in millimeters relative to the center of the tile (like Vector3dBlock).
       *Each position is represented as an x, y, z triple of values. 
       * </pre>
       */
      public Builder clearPosition() {
        position_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> direction_ = java.util.Collections.emptyList();
      private void ensureDirectionIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          direction_ = new java.util.ArrayList<java.lang.Integer>(direction_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 direction = 3 [packed = true];</code>
       *
       * <pre>
       * rotation angle around the y axis for each instance in milliradians, clockwise.
       *Either one third of the length of 'position' or empty (for a default of 0). 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDirectionList() {
        return java.util.Collections.unmodifiableList(direction_);
      }
      /**
       * <code>repeated int32 direction = 3 [packed = true];</code>
       *
       * <pre>
       * rotation angle around the y axis for each instance in milliradians, clockwise.
       *Either one third of the length of 'position' or empty (for a default of 0). 
       * </pre>
       */
      public int getDirectionCount() {
        return direction_.size();
      }
      /**
       * <code>repeated int32 direction = 3 [packed = true];</code>
       *
       * <pre>
       * rotation angle around the y axis for each instance in milliradians, clockwise.
       *Either one third of the length of 'position' or empty (for a default of 0). 
       * </pre>
       */
      public int getDirection(int index) {
        return direction_.get(index);
      }
      /**
       * <code>repeated int32 direction = 3 [packed = true];</code>
       *
       * <pre>
       * rotation angle around the y axis for each instance in milliradians, clockwise.
       *Either one third of the length of 'position' or empty (for a default of 0). 
       * </pre>
       */
      public Builder setDirection(
          int index, int value) {
        ensureDirectionIsMutable();
        direction_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 direction = 3 [packed = true];</code>
       *
       * <pre>
       * rotation angle around the y axis for each instance in milliradians, clockwise.
       *Either one third of the length of 'position' or empty (for a default of 0). 
       * </pre>
       */
      public Builder addDirection(int value) {
        ensureDirectionIsMutable();
        direction_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 direction = 3 [packed = true];</code>
       *
       * <pre>
       * rotation angle around the y axis for each instance in milliradians, clockwise.
       *Either one third of the length of 'position' or empty (for a default of 0). 
       * </pre>
       */
      public Builder addAllDirection(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDirectionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, direction_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 direction = 3 [packed = true];</code>
       *
       * <pre>
       * rotation angle around the y axis for each instance in milliradians, clockwise.
       *Either one third of the length of 'position' or empty (for a default of 0). 
       * </pre>
       */
      public Builder clearDirection() {
        direction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> scale_ = java.util.Collections.emptyList();
      private void ensureScaleIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          scale_ = new java.util.ArrayList<java.lang.Integer>(scale_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 scale = 4 [packed = true];</code>
       *
       * <pre>
       * scale factor for each instance in 1/1000.
       *Either one third of the length of 'position' or empty (for a default of 1). 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScaleList() {
        return java.util.Collections.unmodifiableList(scale_);
      }
      /**
       * <code>repeated uint32 scale = 4 [packed = true];</code>
       *
       * <pre>
       * scale factor for each instance in 1/1000.
       *Either one third of the length of 'position' or empty (for a default of 1). 
       * </pre>
       */
      public int getScaleCount() {
        return scale_.size();
      }
      /**
       * <code>repeated uint32 scale = 4 [packed = true];</code>
       *
       * <pre>
       * scale factor for each instance in 1/1000.
       *Either one third of the length of 'position' or empty (for a default of 1). 
       * </pre>
       */
      public int getScale(int index) {
        return scale_.get(index);
      }
      /**
       * <code>repeated uint32 scale = 4 [packed = true];</code>
       *
       * <pre>
       * scale factor for each instance in 1/1000.
       *Either one third of the length of 'position' or empty (for a default of 1). 
       * </pre>
       */
      public Builder setScale(
          int index, int value) {
        ensureScaleIsMutable();
        scale_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 scale = 4 [packed = true];</code>
       *
       * <pre>
       * scale factor for each instance in 1/1000.
       *Either one third of the length of 'position' or empty (for a default of 1). 
       * </pre>
       */
      public Builder addScale(int value) {
        ensureScaleIsMutable();
        scale_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 scale = 4 [packed = true];</code>
       *
       * <pre>
       * scale factor for each instance in 1/1000.
       *Either one third of the length of 'position' or empty (for a default of 1). 
       * </pre>
       */
      public Builder addAllScale(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScaleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scale_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 scale = 4 [packed = true];</code>
       *
       * <pre>
       * scale factor for each instance in 1/1000.
       *Either one third of the length of 'position' or empty (for a default of 1). 
       * </pre>
       */
      public Builder clearScale() {
        scale_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation animation_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation, org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.AnimationOrBuilder> animationBuilder_;
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public boolean hasAnimation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation getAnimation() {
        if (animationBuilder_ == null) {
          return animation_;
        } else {
          return animationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public Builder setAnimation(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation value) {
        if (animationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          animation_ = value;
          onChanged();
        } else {
          animationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public Builder setAnimation(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder builderForValue) {
        if (animationBuilder_ == null) {
          animation_ = builderForValue.build();
          onChanged();
        } else {
          animationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public Builder mergeAnimation(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation value) {
        if (animationBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              animation_ != org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDefaultInstance()) {
            animation_ =
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.newBuilder(animation_).mergeFrom(value).buildPartial();
          } else {
            animation_ = value;
          }
          onChanged();
        } else {
          animationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public Builder clearAnimation() {
        if (animationBuilder_ == null) {
          animation_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDefaultInstance();
          onChanged();
        } else {
          animationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder getAnimationBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getAnimationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.AnimationOrBuilder getAnimationOrBuilder() {
        if (animationBuilder_ != null) {
          return animationBuilder_.getMessageOrBuilder();
        } else {
          return animation_;
        }
      }
      /**
       * <code>optional .frontend_pbf.Animation animation = 6;</code>
       *
       * <pre>
       * this message is present if this geometry is animated 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation, org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.AnimationOrBuilder> 
          getAnimationFieldBuilder() {
        if (animationBuilder_ == null) {
          animationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation, org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.AnimationOrBuilder>(
                  getAnimation(),
                  getParentForChildren(),
                  isClean());
          animation_ = null;
        }
        return animationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.InstanceGeometry)
    }

    static {
      defaultInstance = new InstanceGeometry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.InstanceGeometry)
  }

  public interface AnimationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.Animation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType getType();

    /**
     * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
     */
    boolean hasLoopMode();
    /**
     * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode getLoopMode();

    /**
     * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
     */
    boolean hasTimerType();
    /**
     * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType getTimerType();

    /**
     * <code>required double runsPerSecond = 4;</code>
     *
     * <pre>
     * the fraction of the entire animation that is completed each second. 
     * </pre>
     */
    boolean hasRunsPerSecond();
    /**
     * <code>required double runsPerSecond = 4;</code>
     *
     * <pre>
     * the fraction of the entire animation that is completed each second. 
     * </pre>
     */
    double getRunsPerSecond();
  }
  /**
   * Protobuf type {@code frontend_pbf.Animation}
   *
   * <pre>
   * The parameters defining an animation.
   *At the moment, this does not support keys yet.
   *Instead, there's an assumption based on the type of animation,
   *e.g. rotations assume that each run of the animation means one full (360°) rotation. 
   * </pre>
   */
  public static final class Animation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.Animation)
      AnimationOrBuilder {
    // Use Animation.newBuilder() to construct.
    private Animation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Animation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Animation defaultInstance;
    public static Animation getDefaultInstance() {
      return defaultInstance;
    }

    public Animation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Animation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType value = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode value = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                loopMode_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType value = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                timerType_ = value;
              }
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              runsPerSecond_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Animation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Animation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder.class);
    }

    public static com.google.protobuf.Parser<Animation> PARSER =
        new com.google.protobuf.AbstractParser<Animation>() {
      public Animation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Animation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Animation> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code frontend_pbf.Animation.AnimationType}
     *
     * <pre>
     * the property that is being modified 
     * </pre>
     */
    public enum AnimationType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ROTATION_X = 1;</code>
       *
       * <pre>
       * clockwise rotation around the model's local x axis
       *(before InstanceGeometry's transformations are applied) 
       * </pre>
       */
      ROTATION_X(0, 1),
      ;

      /**
       * <code>ROTATION_X = 1;</code>
       *
       * <pre>
       * clockwise rotation around the model's local x axis
       *(before InstanceGeometry's transformations are applied) 
       * </pre>
       */
      public static final int ROTATION_X_VALUE = 1;


      public final int getNumber() { return value; }

      public static AnimationType valueOf(int value) {
        switch (value) {
          case 1: return ROTATION_X;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AnimationType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AnimationType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AnimationType>() {
              public AnimationType findValueByNumber(int number) {
                return AnimationType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDescriptor().getEnumTypes().get(0);
      }

      private static final AnimationType[] VALUES = values();

      public static AnimationType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private AnimationType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:frontend_pbf.Animation.AnimationType)
    }

    /**
     * Protobuf enum {@code frontend_pbf.Animation.LoopMode}
     *
     * <pre>
     * what happens after the animation completes 
     * </pre>
     */
    public enum LoopMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CYCLE = 1;</code>
       *
       * <pre>
       * restart the animation from the beginning.
       *Remaining progress should be used in the next cycle (i.e. modulo-style wrap). 
       * </pre>
       */
      CYCLE(0, 1),
      ;

      /**
       * <code>CYCLE = 1;</code>
       *
       * <pre>
       * restart the animation from the beginning.
       *Remaining progress should be used in the next cycle (i.e. modulo-style wrap). 
       * </pre>
       */
      public static final int CYCLE_VALUE = 1;


      public final int getNumber() { return value; }

      public static LoopMode valueOf(int value) {
        switch (value) {
          case 1: return CYCLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LoopMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<LoopMode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LoopMode>() {
              public LoopMode findValueByNumber(int number) {
                return LoopMode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDescriptor().getEnumTypes().get(1);
      }

      private static final LoopMode[] VALUES = values();

      public static LoopMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private LoopMode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:frontend_pbf.Animation.LoopMode)
    }

    /**
     * Protobuf enum {@code frontend_pbf.Animation.TimerType}
     *
     * <pre>
     * the source of the animation timer.
     *May eventually be extended to include local time in the simulated location,
     *animations triggered by user interaction, or factors such as wind direction. 
     * </pre>
     */
    public enum TimerType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MODEL_TIME = 1;</code>
       *
       * <pre>
       * A clock counting seconds with arbitrary starting point.
       *Can even be started at different values for different models to prevent synced animations. 
       * </pre>
       */
      MODEL_TIME(0, 1),
      ;

      /**
       * <code>MODEL_TIME = 1;</code>
       *
       * <pre>
       * A clock counting seconds with arbitrary starting point.
       *Can even be started at different values for different models to prevent synced animations. 
       * </pre>
       */
      public static final int MODEL_TIME_VALUE = 1;


      public final int getNumber() { return value; }

      public static TimerType valueOf(int value) {
        switch (value) {
          case 1: return MODEL_TIME;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TimerType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TimerType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TimerType>() {
              public TimerType findValueByNumber(int number) {
                return TimerType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDescriptor().getEnumTypes().get(2);
      }

      private static final TimerType[] VALUES = values();

      public static TimerType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TimerType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:frontend_pbf.Animation.TimerType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType type_;
    /**
     * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType getType() {
      return type_;
    }

    public static final int LOOPMODE_FIELD_NUMBER = 2;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode loopMode_;
    /**
     * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
     */
    public boolean hasLoopMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode getLoopMode() {
      return loopMode_;
    }

    public static final int TIMERTYPE_FIELD_NUMBER = 3;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType timerType_;
    /**
     * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
     */
    public boolean hasTimerType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType getTimerType() {
      return timerType_;
    }

    public static final int RUNSPERSECOND_FIELD_NUMBER = 4;
    private double runsPerSecond_;
    /**
     * <code>required double runsPerSecond = 4;</code>
     *
     * <pre>
     * the fraction of the entire animation that is completed each second. 
     * </pre>
     */
    public boolean hasRunsPerSecond() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double runsPerSecond = 4;</code>
     *
     * <pre>
     * the fraction of the entire animation that is completed each second. 
     * </pre>
     */
    public double getRunsPerSecond() {
      return runsPerSecond_;
    }

    private void initFields() {
      type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType.ROTATION_X;
      loopMode_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode.CYCLE;
      timerType_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType.MODEL_TIME;
      runsPerSecond_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRunsPerSecond()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, loopMode_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, timerType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, runsPerSecond_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, loopMode_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, timerType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, runsPerSecond_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.Animation}
     *
     * <pre>
     * The parameters defining an animation.
     *At the moment, this does not support keys yet.
     *Instead, there's an assumption based on the type of animation,
     *e.g. rotations assume that each run of the animation means one full (360°) rotation. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.Animation)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.AnimationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Animation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Animation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType.ROTATION_X;
        bitField0_ = (bitField0_ & ~0x00000001);
        loopMode_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode.CYCLE;
        bitField0_ = (bitField0_ & ~0x00000002);
        timerType_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType.MODEL_TIME;
        bitField0_ = (bitField0_ & ~0x00000004);
        runsPerSecond_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Animation_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loopMode_ = loopMode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timerType_ = timerType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.runsPerSecond_ = runsPerSecond_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasLoopMode()) {
          setLoopMode(other.getLoopMode());
        }
        if (other.hasTimerType()) {
          setTimerType(other.getTimerType());
        }
        if (other.hasRunsPerSecond()) {
          setRunsPerSecond(other.getRunsPerSecond());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasRunsPerSecond()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType.ROTATION_X;
      /**
       * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType getType() {
        return type_;
      }
      /**
       * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
       */
      public Builder setType(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .frontend_pbf.Animation.AnimationType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.AnimationType.ROTATION_X;
        onChanged();
        return this;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode loopMode_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode.CYCLE;
      /**
       * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
       */
      public boolean hasLoopMode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode getLoopMode() {
        return loopMode_;
      }
      /**
       * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
       */
      public Builder setLoopMode(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        loopMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .frontend_pbf.Animation.LoopMode loopMode = 2 [default = CYCLE];</code>
       */
      public Builder clearLoopMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loopMode_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.LoopMode.CYCLE;
        onChanged();
        return this;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType timerType_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType.MODEL_TIME;
      /**
       * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
       */
      public boolean hasTimerType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType getTimerType() {
        return timerType_;
      }
      /**
       * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
       */
      public Builder setTimerType(org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        timerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .frontend_pbf.Animation.TimerType timerType = 3 [default = MODEL_TIME];</code>
       */
      public Builder clearTimerType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timerType_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Animation.TimerType.MODEL_TIME;
        onChanged();
        return this;
      }

      private double runsPerSecond_ ;
      /**
       * <code>required double runsPerSecond = 4;</code>
       *
       * <pre>
       * the fraction of the entire animation that is completed each second. 
       * </pre>
       */
      public boolean hasRunsPerSecond() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double runsPerSecond = 4;</code>
       *
       * <pre>
       * the fraction of the entire animation that is completed each second. 
       * </pre>
       */
      public double getRunsPerSecond() {
        return runsPerSecond_;
      }
      /**
       * <code>required double runsPerSecond = 4;</code>
       *
       * <pre>
       * the fraction of the entire animation that is completed each second. 
       * </pre>
       */
      public Builder setRunsPerSecond(double value) {
        bitField0_ |= 0x00000008;
        runsPerSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double runsPerSecond = 4;</code>
       *
       * <pre>
       * the fraction of the entire animation that is completed each second. 
       * </pre>
       */
      public Builder clearRunsPerSecond() {
        bitField0_ = (bitField0_ & ~0x00000008);
        runsPerSecond_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.Animation)
    }

    static {
      defaultInstance = new Animation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.Animation)
  }

  public interface WorldObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.WorldObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string osmId = 1;</code>
     *
     * <pre>
     * the OSM id of the primary element this object is created from, if any 
     * </pre>
     */
    boolean hasOsmId();
    /**
     * <code>optional string osmId = 1;</code>
     *
     * <pre>
     * the OSM id of the primary element this object is created from, if any 
     * </pre>
     */
    java.lang.String getOsmId();
    /**
     * <code>optional string osmId = 1;</code>
     *
     * <pre>
     * the OSM id of the primary element this object is created from, if any 
     * </pre>
     */
    com.google.protobuf.ByteString
        getOsmIdBytes();

    /**
     * <code>optional uint32 typeName = 2;</code>
     *
     * <pre>
     * the type of this WorldObject, in broad terms. References stringBlock. 
     * </pre>
     */
    boolean hasTypeName();
    /**
     * <code>optional uint32 typeName = 2;</code>
     *
     * <pre>
     * the type of this WorldObject, in broad terms. References stringBlock. 
     * </pre>
     */
    int getTypeName();

    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry> 
        getTriangleGeometriesList();
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry getTriangleGeometries(int index);
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    int getTriangleGeometriesCount();
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder> 
        getTriangleGeometriesOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder getTriangleGeometriesOrBuilder(
        int index);

    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry> 
        getExtrusionGeometriesList();
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry getExtrusionGeometries(int index);
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    int getExtrusionGeometriesCount();
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder> 
        getExtrusionGeometriesOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder getExtrusionGeometriesOrBuilder(
        int index);

    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry> 
        getInstanceGeometriesList();
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry getInstanceGeometries(int index);
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    int getInstanceGeometriesCount();
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder> 
        getInstanceGeometriesOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder getInstanceGeometriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.WorldObject}
   *
   * <pre>
   * a three-dimensional object 
   * </pre>
   */
  public static final class WorldObject extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.WorldObject)
      WorldObjectOrBuilder {
    // Use WorldObject.newBuilder() to construct.
    private WorldObject(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WorldObject(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WorldObject defaultInstance;
    public static WorldObject getDefaultInstance() {
      return defaultInstance;
    }

    public WorldObject getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WorldObject(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              osmId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              typeName_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                triangleGeometries_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry>();
                mutable_bitField0_ |= 0x00000004;
              }
              triangleGeometries_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                extrusionGeometries_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry>();
                mutable_bitField0_ |= 0x00000008;
              }
              extrusionGeometries_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                instanceGeometries_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry>();
                mutable_bitField0_ |= 0x00000010;
              }
              instanceGeometries_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          triangleGeometries_ = java.util.Collections.unmodifiableList(triangleGeometries_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          extrusionGeometries_ = java.util.Collections.unmodifiableList(extrusionGeometries_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          instanceGeometries_ = java.util.Collections.unmodifiableList(instanceGeometries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_WorldObject_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_WorldObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder.class);
    }

    public static com.google.protobuf.Parser<WorldObject> PARSER =
        new com.google.protobuf.AbstractParser<WorldObject>() {
      public WorldObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorldObject(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WorldObject> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int OSMID_FIELD_NUMBER = 1;
    private java.lang.Object osmId_;
    /**
     * <code>optional string osmId = 1;</code>
     *
     * <pre>
     * the OSM id of the primary element this object is created from, if any 
     * </pre>
     */
    public boolean hasOsmId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string osmId = 1;</code>
     *
     * <pre>
     * the OSM id of the primary element this object is created from, if any 
     * </pre>
     */
    public java.lang.String getOsmId() {
      java.lang.Object ref = osmId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          osmId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string osmId = 1;</code>
     *
     * <pre>
     * the OSM id of the primary element this object is created from, if any 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOsmIdBytes() {
      java.lang.Object ref = osmId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        osmId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPENAME_FIELD_NUMBER = 2;
    private int typeName_;
    /**
     * <code>optional uint32 typeName = 2;</code>
     *
     * <pre>
     * the type of this WorldObject, in broad terms. References stringBlock. 
     * </pre>
     */
    public boolean hasTypeName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 typeName = 2;</code>
     *
     * <pre>
     * the type of this WorldObject, in broad terms. References stringBlock. 
     * </pre>
     */
    public int getTypeName() {
      return typeName_;
    }

    public static final int TRIANGLEGEOMETRIES_FIELD_NUMBER = 3;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry> triangleGeometries_;
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry> getTriangleGeometriesList() {
      return triangleGeometries_;
    }
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder> 
        getTriangleGeometriesOrBuilderList() {
      return triangleGeometries_;
    }
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public int getTriangleGeometriesCount() {
      return triangleGeometries_.size();
    }
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry getTriangleGeometries(int index) {
      return triangleGeometries_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder getTriangleGeometriesOrBuilder(
        int index) {
      return triangleGeometries_.get(index);
    }

    public static final int EXTRUSIONGEOMETRIES_FIELD_NUMBER = 4;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry> extrusionGeometries_;
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry> getExtrusionGeometriesList() {
      return extrusionGeometries_;
    }
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder> 
        getExtrusionGeometriesOrBuilderList() {
      return extrusionGeometries_;
    }
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public int getExtrusionGeometriesCount() {
      return extrusionGeometries_.size();
    }
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry getExtrusionGeometries(int index) {
      return extrusionGeometries_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder getExtrusionGeometriesOrBuilder(
        int index) {
      return extrusionGeometries_.get(index);
    }

    public static final int INSTANCEGEOMETRIES_FIELD_NUMBER = 5;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry> instanceGeometries_;
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry> getInstanceGeometriesList() {
      return instanceGeometries_;
    }
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder> 
        getInstanceGeometriesOrBuilderList() {
      return instanceGeometries_;
    }
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public int getInstanceGeometriesCount() {
      return instanceGeometries_.size();
    }
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry getInstanceGeometries(int index) {
      return instanceGeometries_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
     *
     * <pre>
     * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
     * </pre>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder getInstanceGeometriesOrBuilder(
        int index) {
      return instanceGeometries_.get(index);
    }

    private void initFields() {
      osmId_ = "";
      typeName_ = 0;
      triangleGeometries_ = java.util.Collections.emptyList();
      extrusionGeometries_ = java.util.Collections.emptyList();
      instanceGeometries_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getTriangleGeometriesCount(); i++) {
        if (!getTriangleGeometries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExtrusionGeometriesCount(); i++) {
        if (!getExtrusionGeometries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getInstanceGeometriesCount(); i++) {
        if (!getInstanceGeometries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getOsmIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, typeName_);
      }
      for (int i = 0; i < triangleGeometries_.size(); i++) {
        output.writeMessage(3, triangleGeometries_.get(i));
      }
      for (int i = 0; i < extrusionGeometries_.size(); i++) {
        output.writeMessage(4, extrusionGeometries_.get(i));
      }
      for (int i = 0; i < instanceGeometries_.size(); i++) {
        output.writeMessage(5, instanceGeometries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getOsmIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, typeName_);
      }
      for (int i = 0; i < triangleGeometries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, triangleGeometries_.get(i));
      }
      for (int i = 0; i < extrusionGeometries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, extrusionGeometries_.get(i));
      }
      for (int i = 0; i < instanceGeometries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, instanceGeometries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.WorldObject}
     *
     * <pre>
     * a three-dimensional object 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.WorldObject)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_WorldObject_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_WorldObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTriangleGeometriesFieldBuilder();
          getExtrusionGeometriesFieldBuilder();
          getInstanceGeometriesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        osmId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        typeName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (triangleGeometriesBuilder_ == null) {
          triangleGeometries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          triangleGeometriesBuilder_.clear();
        }
        if (extrusionGeometriesBuilder_ == null) {
          extrusionGeometries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          extrusionGeometriesBuilder_.clear();
        }
        if (instanceGeometriesBuilder_ == null) {
          instanceGeometries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          instanceGeometriesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_WorldObject_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.osmId_ = osmId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.typeName_ = typeName_;
        if (triangleGeometriesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            triangleGeometries_ = java.util.Collections.unmodifiableList(triangleGeometries_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.triangleGeometries_ = triangleGeometries_;
        } else {
          result.triangleGeometries_ = triangleGeometriesBuilder_.build();
        }
        if (extrusionGeometriesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            extrusionGeometries_ = java.util.Collections.unmodifiableList(extrusionGeometries_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.extrusionGeometries_ = extrusionGeometries_;
        } else {
          result.extrusionGeometries_ = extrusionGeometriesBuilder_.build();
        }
        if (instanceGeometriesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            instanceGeometries_ = java.util.Collections.unmodifiableList(instanceGeometries_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.instanceGeometries_ = instanceGeometries_;
        } else {
          result.instanceGeometries_ = instanceGeometriesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.getDefaultInstance()) return this;
        if (other.hasOsmId()) {
          bitField0_ |= 0x00000001;
          osmId_ = other.osmId_;
          onChanged();
        }
        if (other.hasTypeName()) {
          setTypeName(other.getTypeName());
        }
        if (triangleGeometriesBuilder_ == null) {
          if (!other.triangleGeometries_.isEmpty()) {
            if (triangleGeometries_.isEmpty()) {
              triangleGeometries_ = other.triangleGeometries_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTriangleGeometriesIsMutable();
              triangleGeometries_.addAll(other.triangleGeometries_);
            }
            onChanged();
          }
        } else {
          if (!other.triangleGeometries_.isEmpty()) {
            if (triangleGeometriesBuilder_.isEmpty()) {
              triangleGeometriesBuilder_.dispose();
              triangleGeometriesBuilder_ = null;
              triangleGeometries_ = other.triangleGeometries_;
              bitField0_ = (bitField0_ & ~0x00000004);
              triangleGeometriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTriangleGeometriesFieldBuilder() : null;
            } else {
              triangleGeometriesBuilder_.addAllMessages(other.triangleGeometries_);
            }
          }
        }
        if (extrusionGeometriesBuilder_ == null) {
          if (!other.extrusionGeometries_.isEmpty()) {
            if (extrusionGeometries_.isEmpty()) {
              extrusionGeometries_ = other.extrusionGeometries_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureExtrusionGeometriesIsMutable();
              extrusionGeometries_.addAll(other.extrusionGeometries_);
            }
            onChanged();
          }
        } else {
          if (!other.extrusionGeometries_.isEmpty()) {
            if (extrusionGeometriesBuilder_.isEmpty()) {
              extrusionGeometriesBuilder_.dispose();
              extrusionGeometriesBuilder_ = null;
              extrusionGeometries_ = other.extrusionGeometries_;
              bitField0_ = (bitField0_ & ~0x00000008);
              extrusionGeometriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExtrusionGeometriesFieldBuilder() : null;
            } else {
              extrusionGeometriesBuilder_.addAllMessages(other.extrusionGeometries_);
            }
          }
        }
        if (instanceGeometriesBuilder_ == null) {
          if (!other.instanceGeometries_.isEmpty()) {
            if (instanceGeometries_.isEmpty()) {
              instanceGeometries_ = other.instanceGeometries_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureInstanceGeometriesIsMutable();
              instanceGeometries_.addAll(other.instanceGeometries_);
            }
            onChanged();
          }
        } else {
          if (!other.instanceGeometries_.isEmpty()) {
            if (instanceGeometriesBuilder_.isEmpty()) {
              instanceGeometriesBuilder_.dispose();
              instanceGeometriesBuilder_ = null;
              instanceGeometries_ = other.instanceGeometries_;
              bitField0_ = (bitField0_ & ~0x00000010);
              instanceGeometriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInstanceGeometriesFieldBuilder() : null;
            } else {
              instanceGeometriesBuilder_.addAllMessages(other.instanceGeometries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTriangleGeometriesCount(); i++) {
          if (!getTriangleGeometries(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExtrusionGeometriesCount(); i++) {
          if (!getExtrusionGeometries(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getInstanceGeometriesCount(); i++) {
          if (!getInstanceGeometries(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object osmId_ = "";
      /**
       * <code>optional string osmId = 1;</code>
       *
       * <pre>
       * the OSM id of the primary element this object is created from, if any 
       * </pre>
       */
      public boolean hasOsmId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string osmId = 1;</code>
       *
       * <pre>
       * the OSM id of the primary element this object is created from, if any 
       * </pre>
       */
      public java.lang.String getOsmId() {
        java.lang.Object ref = osmId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            osmId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string osmId = 1;</code>
       *
       * <pre>
       * the OSM id of the primary element this object is created from, if any 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOsmIdBytes() {
        java.lang.Object ref = osmId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          osmId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string osmId = 1;</code>
       *
       * <pre>
       * the OSM id of the primary element this object is created from, if any 
       * </pre>
       */
      public Builder setOsmId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        osmId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string osmId = 1;</code>
       *
       * <pre>
       * the OSM id of the primary element this object is created from, if any 
       * </pre>
       */
      public Builder clearOsmId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        osmId_ = getDefaultInstance().getOsmId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string osmId = 1;</code>
       *
       * <pre>
       * the OSM id of the primary element this object is created from, if any 
       * </pre>
       */
      public Builder setOsmIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        osmId_ = value;
        onChanged();
        return this;
      }

      private int typeName_ ;
      /**
       * <code>optional uint32 typeName = 2;</code>
       *
       * <pre>
       * the type of this WorldObject, in broad terms. References stringBlock. 
       * </pre>
       */
      public boolean hasTypeName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 typeName = 2;</code>
       *
       * <pre>
       * the type of this WorldObject, in broad terms. References stringBlock. 
       * </pre>
       */
      public int getTypeName() {
        return typeName_;
      }
      /**
       * <code>optional uint32 typeName = 2;</code>
       *
       * <pre>
       * the type of this WorldObject, in broad terms. References stringBlock. 
       * </pre>
       */
      public Builder setTypeName(int value) {
        bitField0_ |= 0x00000002;
        typeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 typeName = 2;</code>
       *
       * <pre>
       * the type of this WorldObject, in broad terms. References stringBlock. 
       * </pre>
       */
      public Builder clearTypeName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        typeName_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry> triangleGeometries_ =
        java.util.Collections.emptyList();
      private void ensureTriangleGeometriesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          triangleGeometries_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry>(triangleGeometries_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder> triangleGeometriesBuilder_;

      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry> getTriangleGeometriesList() {
        if (triangleGeometriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(triangleGeometries_);
        } else {
          return triangleGeometriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public int getTriangleGeometriesCount() {
        if (triangleGeometriesBuilder_ == null) {
          return triangleGeometries_.size();
        } else {
          return triangleGeometriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry getTriangleGeometries(int index) {
        if (triangleGeometriesBuilder_ == null) {
          return triangleGeometries_.get(index);
        } else {
          return triangleGeometriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder setTriangleGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry value) {
        if (triangleGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTriangleGeometriesIsMutable();
          triangleGeometries_.set(index, value);
          onChanged();
        } else {
          triangleGeometriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder setTriangleGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder builderForValue) {
        if (triangleGeometriesBuilder_ == null) {
          ensureTriangleGeometriesIsMutable();
          triangleGeometries_.set(index, builderForValue.build());
          onChanged();
        } else {
          triangleGeometriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addTriangleGeometries(org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry value) {
        if (triangleGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTriangleGeometriesIsMutable();
          triangleGeometries_.add(value);
          onChanged();
        } else {
          triangleGeometriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addTriangleGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry value) {
        if (triangleGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTriangleGeometriesIsMutable();
          triangleGeometries_.add(index, value);
          onChanged();
        } else {
          triangleGeometriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addTriangleGeometries(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder builderForValue) {
        if (triangleGeometriesBuilder_ == null) {
          ensureTriangleGeometriesIsMutable();
          triangleGeometries_.add(builderForValue.build());
          onChanged();
        } else {
          triangleGeometriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addTriangleGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder builderForValue) {
        if (triangleGeometriesBuilder_ == null) {
          ensureTriangleGeometriesIsMutable();
          triangleGeometries_.add(index, builderForValue.build());
          onChanged();
        } else {
          triangleGeometriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addAllTriangleGeometries(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry> values) {
        if (triangleGeometriesBuilder_ == null) {
          ensureTriangleGeometriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, triangleGeometries_);
          onChanged();
        } else {
          triangleGeometriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder clearTriangleGeometries() {
        if (triangleGeometriesBuilder_ == null) {
          triangleGeometries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          triangleGeometriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder removeTriangleGeometries(int index) {
        if (triangleGeometriesBuilder_ == null) {
          ensureTriangleGeometriesIsMutable();
          triangleGeometries_.remove(index);
          onChanged();
        } else {
          triangleGeometriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder getTriangleGeometriesBuilder(
          int index) {
        return getTriangleGeometriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder getTriangleGeometriesOrBuilder(
          int index) {
        if (triangleGeometriesBuilder_ == null) {
          return triangleGeometries_.get(index);  } else {
          return triangleGeometriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder> 
           getTriangleGeometriesOrBuilderList() {
        if (triangleGeometriesBuilder_ != null) {
          return triangleGeometriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(triangleGeometries_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder addTriangleGeometriesBuilder() {
        return getTriangleGeometriesFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder addTriangleGeometriesBuilder(
          int index) {
        return getTriangleGeometriesFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.TriangleGeometry triangleGeometries = 3;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder> 
           getTriangleGeometriesBuilderList() {
        return getTriangleGeometriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder> 
          getTriangleGeometriesFieldBuilder() {
        if (triangleGeometriesBuilder_ == null) {
          triangleGeometriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.TriangleGeometryOrBuilder>(
                  triangleGeometries_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          triangleGeometries_ = null;
        }
        return triangleGeometriesBuilder_;
      }

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry> extrusionGeometries_ =
        java.util.Collections.emptyList();
      private void ensureExtrusionGeometriesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          extrusionGeometries_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry>(extrusionGeometries_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder> extrusionGeometriesBuilder_;

      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry> getExtrusionGeometriesList() {
        if (extrusionGeometriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extrusionGeometries_);
        } else {
          return extrusionGeometriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public int getExtrusionGeometriesCount() {
        if (extrusionGeometriesBuilder_ == null) {
          return extrusionGeometries_.size();
        } else {
          return extrusionGeometriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry getExtrusionGeometries(int index) {
        if (extrusionGeometriesBuilder_ == null) {
          return extrusionGeometries_.get(index);
        } else {
          return extrusionGeometriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder setExtrusionGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry value) {
        if (extrusionGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtrusionGeometriesIsMutable();
          extrusionGeometries_.set(index, value);
          onChanged();
        } else {
          extrusionGeometriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder setExtrusionGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder builderForValue) {
        if (extrusionGeometriesBuilder_ == null) {
          ensureExtrusionGeometriesIsMutable();
          extrusionGeometries_.set(index, builderForValue.build());
          onChanged();
        } else {
          extrusionGeometriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addExtrusionGeometries(org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry value) {
        if (extrusionGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtrusionGeometriesIsMutable();
          extrusionGeometries_.add(value);
          onChanged();
        } else {
          extrusionGeometriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addExtrusionGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry value) {
        if (extrusionGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtrusionGeometriesIsMutable();
          extrusionGeometries_.add(index, value);
          onChanged();
        } else {
          extrusionGeometriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addExtrusionGeometries(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder builderForValue) {
        if (extrusionGeometriesBuilder_ == null) {
          ensureExtrusionGeometriesIsMutable();
          extrusionGeometries_.add(builderForValue.build());
          onChanged();
        } else {
          extrusionGeometriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addExtrusionGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder builderForValue) {
        if (extrusionGeometriesBuilder_ == null) {
          ensureExtrusionGeometriesIsMutable();
          extrusionGeometries_.add(index, builderForValue.build());
          onChanged();
        } else {
          extrusionGeometriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addAllExtrusionGeometries(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry> values) {
        if (extrusionGeometriesBuilder_ == null) {
          ensureExtrusionGeometriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extrusionGeometries_);
          onChanged();
        } else {
          extrusionGeometriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder clearExtrusionGeometries() {
        if (extrusionGeometriesBuilder_ == null) {
          extrusionGeometries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          extrusionGeometriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder removeExtrusionGeometries(int index) {
        if (extrusionGeometriesBuilder_ == null) {
          ensureExtrusionGeometriesIsMutable();
          extrusionGeometries_.remove(index);
          onChanged();
        } else {
          extrusionGeometriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder getExtrusionGeometriesBuilder(
          int index) {
        return getExtrusionGeometriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder getExtrusionGeometriesOrBuilder(
          int index) {
        if (extrusionGeometriesBuilder_ == null) {
          return extrusionGeometries_.get(index);  } else {
          return extrusionGeometriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder> 
           getExtrusionGeometriesOrBuilderList() {
        if (extrusionGeometriesBuilder_ != null) {
          return extrusionGeometriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extrusionGeometries_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder addExtrusionGeometriesBuilder() {
        return getExtrusionGeometriesFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder addExtrusionGeometriesBuilder(
          int index) {
        return getExtrusionGeometriesFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.ExtrusionGeometry extrusionGeometries = 4;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder> 
           getExtrusionGeometriesBuilderList() {
        return getExtrusionGeometriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder> 
          getExtrusionGeometriesFieldBuilder() {
        if (extrusionGeometriesBuilder_ == null) {
          extrusionGeometriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ExtrusionGeometryOrBuilder>(
                  extrusionGeometries_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          extrusionGeometries_ = null;
        }
        return extrusionGeometriesBuilder_;
      }

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry> instanceGeometries_ =
        java.util.Collections.emptyList();
      private void ensureInstanceGeometriesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          instanceGeometries_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry>(instanceGeometries_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder> instanceGeometriesBuilder_;

      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry> getInstanceGeometriesList() {
        if (instanceGeometriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(instanceGeometries_);
        } else {
          return instanceGeometriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public int getInstanceGeometriesCount() {
        if (instanceGeometriesBuilder_ == null) {
          return instanceGeometries_.size();
        } else {
          return instanceGeometriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry getInstanceGeometries(int index) {
        if (instanceGeometriesBuilder_ == null) {
          return instanceGeometries_.get(index);
        } else {
          return instanceGeometriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder setInstanceGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry value) {
        if (instanceGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstanceGeometriesIsMutable();
          instanceGeometries_.set(index, value);
          onChanged();
        } else {
          instanceGeometriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder setInstanceGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder builderForValue) {
        if (instanceGeometriesBuilder_ == null) {
          ensureInstanceGeometriesIsMutable();
          instanceGeometries_.set(index, builderForValue.build());
          onChanged();
        } else {
          instanceGeometriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addInstanceGeometries(org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry value) {
        if (instanceGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstanceGeometriesIsMutable();
          instanceGeometries_.add(value);
          onChanged();
        } else {
          instanceGeometriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addInstanceGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry value) {
        if (instanceGeometriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstanceGeometriesIsMutable();
          instanceGeometries_.add(index, value);
          onChanged();
        } else {
          instanceGeometriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addInstanceGeometries(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder builderForValue) {
        if (instanceGeometriesBuilder_ == null) {
          ensureInstanceGeometriesIsMutable();
          instanceGeometries_.add(builderForValue.build());
          onChanged();
        } else {
          instanceGeometriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addInstanceGeometries(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder builderForValue) {
        if (instanceGeometriesBuilder_ == null) {
          ensureInstanceGeometriesIsMutable();
          instanceGeometries_.add(index, builderForValue.build());
          onChanged();
        } else {
          instanceGeometriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder addAllInstanceGeometries(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry> values) {
        if (instanceGeometriesBuilder_ == null) {
          ensureInstanceGeometriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, instanceGeometries_);
          onChanged();
        } else {
          instanceGeometriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder clearInstanceGeometries() {
        if (instanceGeometriesBuilder_ == null) {
          instanceGeometries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          instanceGeometriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public Builder removeInstanceGeometries(int index) {
        if (instanceGeometriesBuilder_ == null) {
          ensureInstanceGeometriesIsMutable();
          instanceGeometries_.remove(index);
          onChanged();
        } else {
          instanceGeometriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder getInstanceGeometriesBuilder(
          int index) {
        return getInstanceGeometriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder getInstanceGeometriesOrBuilder(
          int index) {
        if (instanceGeometriesBuilder_ == null) {
          return instanceGeometries_.get(index);  } else {
          return instanceGeometriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder> 
           getInstanceGeometriesOrBuilderList() {
        if (instanceGeometriesBuilder_ != null) {
          return instanceGeometriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(instanceGeometries_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder addInstanceGeometriesBuilder() {
        return getInstanceGeometriesFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder addInstanceGeometriesBuilder(
          int index) {
        return getInstanceGeometriesFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.InstanceGeometry instanceGeometries = 5;</code>
       *
       * <pre>
       * geometry this object is composed of; at least 1 of this or one of the other geometry types is required 
       * </pre>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder> 
           getInstanceGeometriesBuilderList() {
        return getInstanceGeometriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder> 
          getInstanceGeometriesFieldBuilder() {
        if (instanceGeometriesBuilder_ == null) {
          instanceGeometriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometry.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.InstanceGeometryOrBuilder>(
                  instanceGeometries_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          instanceGeometries_ = null;
        }
        return instanceGeometriesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.WorldObject)
    }

    static {
      defaultInstance = new WorldObject(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.WorldObject)
  }

  public interface TileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frontend_pbf.Tile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
     */
    boolean hasVector3DBlock();
    /**
     * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock getVector3DBlock();
    /**
     * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlockOrBuilder getVector3DBlockOrBuilder();

    /**
     * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
     */
    boolean hasVector2DBlock();
    /**
     * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock getVector2DBlock();
    /**
     * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlockOrBuilder getVector2DBlockOrBuilder();

    /**
     * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
     */
    boolean hasStringBlock();
    /**
     * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock getStringBlock();
    /**
     * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlockOrBuilder getStringBlockOrBuilder();

    /**
     * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
     */
    boolean hasShapeBlock();
    /**
     * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock getShapeBlock();
    /**
     * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlockOrBuilder getShapeBlockOrBuilder();

    /**
     * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
     */
    boolean hasMaterialBlock();
    /**
     * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock getMaterialBlock();
    /**
     * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlockOrBuilder getMaterialBlockOrBuilder();

    /**
     * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
     */
    boolean hasModelBlock();
    /**
     * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock getModelBlock();
    /**
     * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlockOrBuilder getModelBlockOrBuilder();

    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> 
        getObjectsList();
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject getObjects(int index);
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    int getObjectsCount();
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
        getObjectsOrBuilderList();
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder getObjectsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code frontend_pbf.Tile}
   *
   * <pre>
   * a tile with 3d data 
   * </pre>
   */
  public static final class Tile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:frontend_pbf.Tile)
      TileOrBuilder {
    // Use Tile.newBuilder() to construct.
    private Tile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Tile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Tile defaultInstance;
    public static Tile getDefaultInstance() {
      return defaultInstance;
    }

    public Tile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Tile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = vector3DBlock_.toBuilder();
              }
              vector3DBlock_ = input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vector3DBlock_);
                vector3DBlock_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = vector2DBlock_.toBuilder();
              }
              vector2DBlock_ = input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vector2DBlock_);
                vector2DBlock_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = stringBlock_.toBuilder();
              }
              stringBlock_ = input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stringBlock_);
                stringBlock_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = shapeBlock_.toBuilder();
              }
              shapeBlock_ = input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shapeBlock_);
                shapeBlock_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = materialBlock_.toBuilder();
              }
              materialBlock_ = input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(materialBlock_);
                materialBlock_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = modelBlock_.toBuilder();
              }
              modelBlock_ = input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelBlock_);
                modelBlock_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                objects_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject>();
                mutable_bitField0_ |= 0x00000040;
              }
              objects_.add(input.readMessage(org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          objects_ = java.util.Collections.unmodifiableList(objects_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Tile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Tile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile.Builder.class);
    }

    public static com.google.protobuf.Parser<Tile> PARSER =
        new com.google.protobuf.AbstractParser<Tile>() {
      public Tile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Tile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VECTOR3DBLOCK_FIELD_NUMBER = 1;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock vector3DBlock_;
    /**
     * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
     */
    public boolean hasVector3DBlock() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock getVector3DBlock() {
      return vector3DBlock_;
    }
    /**
     * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlockOrBuilder getVector3DBlockOrBuilder() {
      return vector3DBlock_;
    }

    public static final int VECTOR2DBLOCK_FIELD_NUMBER = 2;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock vector2DBlock_;
    /**
     * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
     */
    public boolean hasVector2DBlock() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock getVector2DBlock() {
      return vector2DBlock_;
    }
    /**
     * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlockOrBuilder getVector2DBlockOrBuilder() {
      return vector2DBlock_;
    }

    public static final int STRINGBLOCK_FIELD_NUMBER = 3;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock stringBlock_;
    /**
     * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
     */
    public boolean hasStringBlock() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock getStringBlock() {
      return stringBlock_;
    }
    /**
     * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlockOrBuilder getStringBlockOrBuilder() {
      return stringBlock_;
    }

    public static final int SHAPEBLOCK_FIELD_NUMBER = 4;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock shapeBlock_;
    /**
     * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
     */
    public boolean hasShapeBlock() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock getShapeBlock() {
      return shapeBlock_;
    }
    /**
     * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlockOrBuilder getShapeBlockOrBuilder() {
      return shapeBlock_;
    }

    public static final int MATERIALBLOCK_FIELD_NUMBER = 5;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock materialBlock_;
    /**
     * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
     */
    public boolean hasMaterialBlock() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock getMaterialBlock() {
      return materialBlock_;
    }
    /**
     * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlockOrBuilder getMaterialBlockOrBuilder() {
      return materialBlock_;
    }

    public static final int MODELBLOCK_FIELD_NUMBER = 6;
    private org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock modelBlock_;
    /**
     * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
     */
    public boolean hasModelBlock() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock getModelBlock() {
      return modelBlock_;
    }
    /**
     * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlockOrBuilder getModelBlockOrBuilder() {
      return modelBlock_;
    }

    public static final int OBJECTS_FIELD_NUMBER = 7;
    private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> objects_;
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> getObjectsList() {
      return objects_;
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
        getObjectsOrBuilderList() {
      return objects_;
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    public int getObjectsCount() {
      return objects_.size();
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject getObjects(int index) {
      return objects_.get(index);
    }
    /**
     * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
     */
    public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder getObjectsOrBuilder(
        int index) {
      return objects_.get(index);
    }

    private void initFields() {
      vector3DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.getDefaultInstance();
      vector2DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.getDefaultInstance();
      stringBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.getDefaultInstance();
      shapeBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.getDefaultInstance();
      materialBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.getDefaultInstance();
      modelBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.getDefaultInstance();
      objects_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVector3DBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVector2DBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStringBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShapeBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaterialBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasModelBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getShapeBlock().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMaterialBlock().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getModelBlock().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getObjectsCount(); i++) {
        if (!getObjects(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, vector3DBlock_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, vector2DBlock_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, stringBlock_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, shapeBlock_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, materialBlock_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, modelBlock_);
      }
      for (int i = 0; i < objects_.size(); i++) {
        output.writeMessage(7, objects_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vector3DBlock_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, vector2DBlock_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, stringBlock_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, shapeBlock_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, materialBlock_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, modelBlock_);
      }
      for (int i = 0; i < objects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, objects_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frontend_pbf.Tile}
     *
     * <pre>
     * a tile with 3d data 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frontend_pbf.Tile)
        org.osm2world.core.target.frontend_pbf.FrontendPbf.TileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Tile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Tile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile.class, org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile.Builder.class);
      }

      // Construct using org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVector3DBlockFieldBuilder();
          getVector2DBlockFieldBuilder();
          getStringBlockFieldBuilder();
          getShapeBlockFieldBuilder();
          getMaterialBlockFieldBuilder();
          getModelBlockFieldBuilder();
          getObjectsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (vector3DBlockBuilder_ == null) {
          vector3DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.getDefaultInstance();
        } else {
          vector3DBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (vector2DBlockBuilder_ == null) {
          vector2DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.getDefaultInstance();
        } else {
          vector2DBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (stringBlockBuilder_ == null) {
          stringBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.getDefaultInstance();
        } else {
          stringBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (shapeBlockBuilder_ == null) {
          shapeBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.getDefaultInstance();
        } else {
          shapeBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (materialBlockBuilder_ == null) {
          materialBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.getDefaultInstance();
        } else {
          materialBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (modelBlockBuilder_ == null) {
          modelBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.getDefaultInstance();
        } else {
          modelBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.internal_static_frontend_pbf_Tile_descriptor;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile getDefaultInstanceForType() {
        return org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile.getDefaultInstance();
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile build() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile buildPartial() {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile result = new org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (vector3DBlockBuilder_ == null) {
          result.vector3DBlock_ = vector3DBlock_;
        } else {
          result.vector3DBlock_ = vector3DBlockBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (vector2DBlockBuilder_ == null) {
          result.vector2DBlock_ = vector2DBlock_;
        } else {
          result.vector2DBlock_ = vector2DBlockBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (stringBlockBuilder_ == null) {
          result.stringBlock_ = stringBlock_;
        } else {
          result.stringBlock_ = stringBlockBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (shapeBlockBuilder_ == null) {
          result.shapeBlock_ = shapeBlock_;
        } else {
          result.shapeBlock_ = shapeBlockBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (materialBlockBuilder_ == null) {
          result.materialBlock_ = materialBlock_;
        } else {
          result.materialBlock_ = materialBlockBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (modelBlockBuilder_ == null) {
          result.modelBlock_ = modelBlock_;
        } else {
          result.modelBlock_ = modelBlockBuilder_.build();
        }
        if (objectsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            objects_ = java.util.Collections.unmodifiableList(objects_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.objects_ = objects_;
        } else {
          result.objects_ = objectsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile) {
          return mergeFrom((org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile other) {
        if (other == org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile.getDefaultInstance()) return this;
        if (other.hasVector3DBlock()) {
          mergeVector3DBlock(other.getVector3DBlock());
        }
        if (other.hasVector2DBlock()) {
          mergeVector2DBlock(other.getVector2DBlock());
        }
        if (other.hasStringBlock()) {
          mergeStringBlock(other.getStringBlock());
        }
        if (other.hasShapeBlock()) {
          mergeShapeBlock(other.getShapeBlock());
        }
        if (other.hasMaterialBlock()) {
          mergeMaterialBlock(other.getMaterialBlock());
        }
        if (other.hasModelBlock()) {
          mergeModelBlock(other.getModelBlock());
        }
        if (objectsBuilder_ == null) {
          if (!other.objects_.isEmpty()) {
            if (objects_.isEmpty()) {
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureObjectsIsMutable();
              objects_.addAll(other.objects_);
            }
            onChanged();
          }
        } else {
          if (!other.objects_.isEmpty()) {
            if (objectsBuilder_.isEmpty()) {
              objectsBuilder_.dispose();
              objectsBuilder_ = null;
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000040);
              objectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getObjectsFieldBuilder() : null;
            } else {
              objectsBuilder_.addAllMessages(other.objects_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVector3DBlock()) {
          
          return false;
        }
        if (!hasVector2DBlock()) {
          
          return false;
        }
        if (!hasStringBlock()) {
          
          return false;
        }
        if (!hasShapeBlock()) {
          
          return false;
        }
        if (!hasMaterialBlock()) {
          
          return false;
        }
        if (!hasModelBlock()) {
          
          return false;
        }
        if (!getShapeBlock().isInitialized()) {
          
          return false;
        }
        if (!getMaterialBlock().isInitialized()) {
          
          return false;
        }
        if (!getModelBlock().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getObjectsCount(); i++) {
          if (!getObjects(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.osm2world.core.target.frontend_pbf.FrontendPbf.Tile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock vector3DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlockOrBuilder> vector3DBlockBuilder_;
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public boolean hasVector3DBlock() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock getVector3DBlock() {
        if (vector3DBlockBuilder_ == null) {
          return vector3DBlock_;
        } else {
          return vector3DBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public Builder setVector3DBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock value) {
        if (vector3DBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vector3DBlock_ = value;
          onChanged();
        } else {
          vector3DBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public Builder setVector3DBlock(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder builderForValue) {
        if (vector3DBlockBuilder_ == null) {
          vector3DBlock_ = builderForValue.build();
          onChanged();
        } else {
          vector3DBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public Builder mergeVector3DBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock value) {
        if (vector3DBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              vector3DBlock_ != org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.getDefaultInstance()) {
            vector3DBlock_ =
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.newBuilder(vector3DBlock_).mergeFrom(value).buildPartial();
          } else {
            vector3DBlock_ = value;
          }
          onChanged();
        } else {
          vector3DBlockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public Builder clearVector3DBlock() {
        if (vector3DBlockBuilder_ == null) {
          vector3DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.getDefaultInstance();
          onChanged();
        } else {
          vector3DBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder getVector3DBlockBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getVector3DBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlockOrBuilder getVector3DBlockOrBuilder() {
        if (vector3DBlockBuilder_ != null) {
          return vector3DBlockBuilder_.getMessageOrBuilder();
        } else {
          return vector3DBlock_;
        }
      }
      /**
       * <code>required .frontend_pbf.Vector3dBlock vector3dBlock = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlockOrBuilder> 
          getVector3DBlockFieldBuilder() {
        if (vector3DBlockBuilder_ == null) {
          vector3DBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector3dBlockOrBuilder>(
                  getVector3DBlock(),
                  getParentForChildren(),
                  isClean());
          vector3DBlock_ = null;
        }
        return vector3DBlockBuilder_;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock vector2DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlockOrBuilder> vector2DBlockBuilder_;
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public boolean hasVector2DBlock() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock getVector2DBlock() {
        if (vector2DBlockBuilder_ == null) {
          return vector2DBlock_;
        } else {
          return vector2DBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public Builder setVector2DBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock value) {
        if (vector2DBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vector2DBlock_ = value;
          onChanged();
        } else {
          vector2DBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public Builder setVector2DBlock(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder builderForValue) {
        if (vector2DBlockBuilder_ == null) {
          vector2DBlock_ = builderForValue.build();
          onChanged();
        } else {
          vector2DBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public Builder mergeVector2DBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock value) {
        if (vector2DBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              vector2DBlock_ != org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.getDefaultInstance()) {
            vector2DBlock_ =
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.newBuilder(vector2DBlock_).mergeFrom(value).buildPartial();
          } else {
            vector2DBlock_ = value;
          }
          onChanged();
        } else {
          vector2DBlockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public Builder clearVector2DBlock() {
        if (vector2DBlockBuilder_ == null) {
          vector2DBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.getDefaultInstance();
          onChanged();
        } else {
          vector2DBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder getVector2DBlockBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVector2DBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlockOrBuilder getVector2DBlockOrBuilder() {
        if (vector2DBlockBuilder_ != null) {
          return vector2DBlockBuilder_.getMessageOrBuilder();
        } else {
          return vector2DBlock_;
        }
      }
      /**
       * <code>required .frontend_pbf.Vector2dBlock vector2dBlock = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlockOrBuilder> 
          getVector2DBlockFieldBuilder() {
        if (vector2DBlockBuilder_ == null) {
          vector2DBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.Vector2dBlockOrBuilder>(
                  getVector2DBlock(),
                  getParentForChildren(),
                  isClean());
          vector2DBlock_ = null;
        }
        return vector2DBlockBuilder_;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock stringBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlockOrBuilder> stringBlockBuilder_;
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public boolean hasStringBlock() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock getStringBlock() {
        if (stringBlockBuilder_ == null) {
          return stringBlock_;
        } else {
          return stringBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public Builder setStringBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock value) {
        if (stringBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stringBlock_ = value;
          onChanged();
        } else {
          stringBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public Builder setStringBlock(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder builderForValue) {
        if (stringBlockBuilder_ == null) {
          stringBlock_ = builderForValue.build();
          onChanged();
        } else {
          stringBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public Builder mergeStringBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock value) {
        if (stringBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              stringBlock_ != org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.getDefaultInstance()) {
            stringBlock_ =
              org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.newBuilder(stringBlock_).mergeFrom(value).buildPartial();
          } else {
            stringBlock_ = value;
          }
          onChanged();
        } else {
          stringBlockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public Builder clearStringBlock() {
        if (stringBlockBuilder_ == null) {
          stringBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.getDefaultInstance();
          onChanged();
        } else {
          stringBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder getStringBlockBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStringBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlockOrBuilder getStringBlockOrBuilder() {
        if (stringBlockBuilder_ != null) {
          return stringBlockBuilder_.getMessageOrBuilder();
        } else {
          return stringBlock_;
        }
      }
      /**
       * <code>required .frontend_pbf.StringBlock stringBlock = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlockOrBuilder> 
          getStringBlockFieldBuilder() {
        if (stringBlockBuilder_ == null) {
          stringBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.StringBlockOrBuilder>(
                  getStringBlock(),
                  getParentForChildren(),
                  isClean());
          stringBlock_ = null;
        }
        return stringBlockBuilder_;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock shapeBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlockOrBuilder> shapeBlockBuilder_;
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public boolean hasShapeBlock() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock getShapeBlock() {
        if (shapeBlockBuilder_ == null) {
          return shapeBlock_;
        } else {
          return shapeBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public Builder setShapeBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock value) {
        if (shapeBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shapeBlock_ = value;
          onChanged();
        } else {
          shapeBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public Builder setShapeBlock(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder builderForValue) {
        if (shapeBlockBuilder_ == null) {
          shapeBlock_ = builderForValue.build();
          onChanged();
        } else {
          shapeBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public Builder mergeShapeBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock value) {
        if (shapeBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              shapeBlock_ != org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.getDefaultInstance()) {
            shapeBlock_ =
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.newBuilder(shapeBlock_).mergeFrom(value).buildPartial();
          } else {
            shapeBlock_ = value;
          }
          onChanged();
        } else {
          shapeBlockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public Builder clearShapeBlock() {
        if (shapeBlockBuilder_ == null) {
          shapeBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.getDefaultInstance();
          onChanged();
        } else {
          shapeBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder getShapeBlockBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getShapeBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlockOrBuilder getShapeBlockOrBuilder() {
        if (shapeBlockBuilder_ != null) {
          return shapeBlockBuilder_.getMessageOrBuilder();
        } else {
          return shapeBlock_;
        }
      }
      /**
       * <code>required .frontend_pbf.ShapeBlock shapeBlock = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlockOrBuilder> 
          getShapeBlockFieldBuilder() {
        if (shapeBlockBuilder_ == null) {
          shapeBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ShapeBlockOrBuilder>(
                  getShapeBlock(),
                  getParentForChildren(),
                  isClean());
          shapeBlock_ = null;
        }
        return shapeBlockBuilder_;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock materialBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlockOrBuilder> materialBlockBuilder_;
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public boolean hasMaterialBlock() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock getMaterialBlock() {
        if (materialBlockBuilder_ == null) {
          return materialBlock_;
        } else {
          return materialBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public Builder setMaterialBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock value) {
        if (materialBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          materialBlock_ = value;
          onChanged();
        } else {
          materialBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public Builder setMaterialBlock(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder builderForValue) {
        if (materialBlockBuilder_ == null) {
          materialBlock_ = builderForValue.build();
          onChanged();
        } else {
          materialBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public Builder mergeMaterialBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock value) {
        if (materialBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              materialBlock_ != org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.getDefaultInstance()) {
            materialBlock_ =
              org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.newBuilder(materialBlock_).mergeFrom(value).buildPartial();
          } else {
            materialBlock_ = value;
          }
          onChanged();
        } else {
          materialBlockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public Builder clearMaterialBlock() {
        if (materialBlockBuilder_ == null) {
          materialBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.getDefaultInstance();
          onChanged();
        } else {
          materialBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder getMaterialBlockBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getMaterialBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlockOrBuilder getMaterialBlockOrBuilder() {
        if (materialBlockBuilder_ != null) {
          return materialBlockBuilder_.getMessageOrBuilder();
        } else {
          return materialBlock_;
        }
      }
      /**
       * <code>required .frontend_pbf.MaterialBlock materialBlock = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlockOrBuilder> 
          getMaterialBlockFieldBuilder() {
        if (materialBlockBuilder_ == null) {
          materialBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.MaterialBlockOrBuilder>(
                  getMaterialBlock(),
                  getParentForChildren(),
                  isClean());
          materialBlock_ = null;
        }
        return materialBlockBuilder_;
      }

      private org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock modelBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlockOrBuilder> modelBlockBuilder_;
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public boolean hasModelBlock() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock getModelBlock() {
        if (modelBlockBuilder_ == null) {
          return modelBlock_;
        } else {
          return modelBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public Builder setModelBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock value) {
        if (modelBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelBlock_ = value;
          onChanged();
        } else {
          modelBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public Builder setModelBlock(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder builderForValue) {
        if (modelBlockBuilder_ == null) {
          modelBlock_ = builderForValue.build();
          onChanged();
        } else {
          modelBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public Builder mergeModelBlock(org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock value) {
        if (modelBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              modelBlock_ != org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.getDefaultInstance()) {
            modelBlock_ =
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.newBuilder(modelBlock_).mergeFrom(value).buildPartial();
          } else {
            modelBlock_ = value;
          }
          onChanged();
        } else {
          modelBlockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public Builder clearModelBlock() {
        if (modelBlockBuilder_ == null) {
          modelBlock_ = org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.getDefaultInstance();
          onChanged();
        } else {
          modelBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder getModelBlockBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getModelBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlockOrBuilder getModelBlockOrBuilder() {
        if (modelBlockBuilder_ != null) {
          return modelBlockBuilder_.getMessageOrBuilder();
        } else {
          return modelBlock_;
        }
      }
      /**
       * <code>required .frontend_pbf.ModelBlock modelBlock = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlockOrBuilder> 
          getModelBlockFieldBuilder() {
        if (modelBlockBuilder_ == null) {
          modelBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlock.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.ModelBlockOrBuilder>(
                  getModelBlock(),
                  getParentForChildren(),
                  isClean());
          modelBlock_ = null;
        }
        return modelBlockBuilder_;
      }

      private java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> objects_ =
        java.util.Collections.emptyList();
      private void ensureObjectsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          objects_ = new java.util.ArrayList<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject>(objects_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> objectsBuilder_;

      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> getObjectsList() {
        if (objectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(objects_);
        } else {
          return objectsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public int getObjectsCount() {
        if (objectsBuilder_ == null) {
          return objects_.size();
        } else {
          return objectsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject getObjects(int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);
        } else {
          return objectsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder setObjects(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.set(index, value);
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder setObjects(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder addObjects(org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder addObjects(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(index, value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder addObjects(
          org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder addObjects(
          int index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder addAllObjects(
          java.lang.Iterable<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject> values) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, objects_);
          onChanged();
        } else {
          objectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder clearObjects() {
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public Builder removeObjects(int index) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.remove(index);
          onChanged();
        } else {
          objectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder getObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder getObjectsOrBuilder(
          int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);  } else {
          return objectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public java.util.List<? extends org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
           getObjectsOrBuilderList() {
        if (objectsBuilder_ != null) {
          return objectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(objects_);
        }
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder addObjectsBuilder() {
        return getObjectsFieldBuilder().addBuilder(
            org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder addObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().addBuilder(
            index, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.getDefaultInstance());
      }
      /**
       * <code>repeated .frontend_pbf.WorldObject objects = 7;</code>
       */
      public java.util.List<org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder> 
           getObjectsBuilderList() {
        return getObjectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder> 
          getObjectsFieldBuilder() {
        if (objectsBuilder_ == null) {
          objectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObject.Builder, org.osm2world.core.target.frontend_pbf.FrontendPbf.WorldObjectOrBuilder>(
                  objects_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          objects_ = null;
        }
        return objectsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:frontend_pbf.Tile)
    }

    static {
      defaultInstance = new Tile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:frontend_pbf.Tile)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_Vector3dBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_Vector3dBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_Vector2dBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_Vector2dBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_StringBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_StringBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_ShapeBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_ShapeBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_Shape_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_Shape_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_MaterialBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_MaterialBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_Material_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_Material_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_Material_TextureLayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_Material_TextureLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_ModelBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_ModelBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_TriangleGeometry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_TriangleGeometry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_ExtrusionGeometry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_ExtrusionGeometry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_InstanceGeometry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_InstanceGeometry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_Animation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_Animation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_WorldObject_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_WorldObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frontend_pbf_Tile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_frontend_pbf_Tile_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016frontend.proto\022\014frontend_pbf\"#\n\rVector" +
      "3dBlock\022\022\n\006coords\030\001 \003(\022B\002\020\001\"#\n\rVector2dB" +
      "lock\022\022\n\006coords\030\001 \003(\022B\002\020\001\"\036\n\013StringBlock\022" +
      "\017\n\007strings\030\001 \003(\t\"1\n\nShapeBlock\022#\n\006shapes" +
      "\030\001 \003(\0132\023.frontend_pbf.Shape\"\200\001\n\005Shape\022+\n" +
      "\004type\030\001 \002(\0162\035.frontend_pbf.Shape.ShapeTy" +
      "pe\022\026\n\nparameters\030\002 \003(\022B\002\020\001\"2\n\tShapeType\022" +
      "\n\n\006CIRCLE\020\001\022\013\n\007POLYGON\020\002\022\014\n\010POLYLINE\020\003\":" +
      "\n\rMaterialBlock\022)\n\tmaterials\030\001 \003(\0132\026.fro" +
      "ntend_pbf.Material\"\326\005\n\010Material\022\020\n\010ambie",
      "ntR\030\001 \002(\r\022\020\n\010ambientG\030\002 \002(\r\022\020\n\010ambientB\030" +
      "\003 \002(\r\022\020\n\010diffuseR\030\004 \002(\r\022\020\n\010diffuseG\030\005 \002(" +
      "\r\022\020\n\010diffuseB\030\006 \002(\r\022\021\n\tspecularR\030\007 \002(\r\022\021" +
      "\n\tspecularG\030\010 \002(\r\022\021\n\tspecularB\030\t \002(\r\022\021\n\t" +
      "shininess\030\n \002(\r\0229\n\014textureLayer\030\013 \003(\0132#." +
      "frontend_pbf.Material.TextureLayer\022@\n\014tr" +
      "ansparency\030\020 \001(\0162#.frontend_pbf.Material" +
      ".Transparency:\005FALSE\022\030\n\ncastShadow\030\021 \001(\010" +
      ":\004true\032\311\002\n\014TextureLayer\022\022\n\ntextureURL\030\001 " +
      "\002(\t\022>\n\004wrap\030\002 \001(\0162(.frontend_pbf.Materia",
      "l.TextureLayer.Wrap:\006REPEAT\022\021\n\tcolorable" +
      "\030\003 \002(\010\022\024\n\014textureWidth\030\004 \002(\r\022\025\n\rtextureH" +
      "eight\030\005 \002(\r\022V\n\020texCoordFunction\030\006 \001(\01624." +
      "frontend_pbf.Material.TextureLayer.TexCo" +
      "ordFunction:\006CUSTOM\"\035\n\004Wrap\022\n\n\006REPEAT\020\001\022" +
      "\t\n\005CLAMP\020\002\".\n\020TexCoordFunction\022\n\n\006CUSTOM" +
      "\020\001\022\016\n\nGLOBAL_X_Z\020\002\"/\n\014Transparency\022\010\n\004TR" +
      "UE\020\001\022\n\n\006BINARY\020\002\022\t\n\005FALSE\020\003\"7\n\nModelBloc" +
      "k\022)\n\006models\030\001 \003(\0132\031.frontend_pbf.WorldOb" +
      "ject\"Q\n\020TriangleGeometry\022\020\n\010material\030\001 \002",
      "(\r\022\024\n\010vertices\030\002 \003(\004B\002\020\001\022\025\n\ttexCoords\030\003 " +
      "\003(\004B\002\020\001\"\233\001\n\021ExtrusionGeometry\022\020\n\010materia" +
      "l\030\001 \002(\r\022\r\n\005shape\030\002 \002(\r\022\014\n\004path\030\003 \003(\004\022\021\n\t" +
      "upVectors\030\004 \003(\004\022\024\n\014scaleFactors\030\005 \003(\004\022\027\n" +
      "\010startCap\030\007 \001(\010:\005false\022\025\n\006endCap\030\010 \001(\010:\005" +
      "false\"\251\001\n\020InstanceGeometry\022\r\n\005model\030\001 \001(" +
      "\r\022\032\n\022resourceIdentifier\030\005 \001(\t\022\024\n\010positio" +
      "n\030\002 \003(\022B\002\020\001\022\025\n\tdirection\030\003 \003(\005B\002\020\001\022\021\n\005sc" +
      "ale\030\004 \003(\rB\002\020\001\022*\n\tanimation\030\006 \001(\0132\027.front" +
      "end_pbf.Animation\"\251\002\n\tAnimation\0223\n\004type\030",
      "\001 \002(\0162%.frontend_pbf.Animation.Animation" +
      "Type\0229\n\010loopMode\030\002 \001(\0162 .frontend_pbf.An" +
      "imation.LoopMode:\005CYCLE\022@\n\ttimerType\030\003 \001" +
      "(\0162!.frontend_pbf.Animation.TimerType:\nM" +
      "ODEL_TIME\022\025\n\rrunsPerSecond\030\004 \002(\001\"\037\n\rAnim" +
      "ationType\022\016\n\nROTATION_X\020\001\"\025\n\010LoopMode\022\t\n" +
      "\005CYCLE\020\001\"\033\n\tTimerType\022\016\n\nMODEL_TIME\020\001\"\344\001" +
      "\n\013WorldObject\022\r\n\005osmId\030\001 \001(\t\022\020\n\010typeName" +
      "\030\002 \001(\r\022:\n\022triangleGeometries\030\003 \003(\0132\036.fro" +
      "ntend_pbf.TriangleGeometry\022<\n\023extrusionG",
      "eometries\030\004 \003(\0132\037.frontend_pbf.Extrusion" +
      "Geometry\022:\n\022instanceGeometries\030\005 \003(\0132\036.f" +
      "rontend_pbf.InstanceGeometry\"\332\002\n\004Tile\0222\n" +
      "\rvector3dBlock\030\001 \002(\0132\033.frontend_pbf.Vect" +
      "or3dBlock\0222\n\rvector2dBlock\030\002 \002(\0132\033.front" +
      "end_pbf.Vector2dBlock\022.\n\013stringBlock\030\003 \002" +
      "(\0132\031.frontend_pbf.StringBlock\022,\n\nshapeBl" +
      "ock\030\004 \002(\0132\030.frontend_pbf.ShapeBlock\0222\n\rm" +
      "aterialBlock\030\005 \002(\0132\033.frontend_pbf.Materi" +
      "alBlock\022,\n\nmodelBlock\030\006 \002(\0132\030.frontend_p",
      "bf.ModelBlock\022*\n\007objects\030\007 \003(\0132\031.fronten" +
      "d_pbf.WorldObjectB5\n&org.osm2world.core." +
      "target.frontend_pbfB\013FrontendPbf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_frontend_pbf_Vector3dBlock_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_frontend_pbf_Vector3dBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_Vector3dBlock_descriptor,
        new java.lang.String[] { "Coords", });
    internal_static_frontend_pbf_Vector2dBlock_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_frontend_pbf_Vector2dBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_Vector2dBlock_descriptor,
        new java.lang.String[] { "Coords", });
    internal_static_frontend_pbf_StringBlock_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_frontend_pbf_StringBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_StringBlock_descriptor,
        new java.lang.String[] { "Strings", });
    internal_static_frontend_pbf_ShapeBlock_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_frontend_pbf_ShapeBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_ShapeBlock_descriptor,
        new java.lang.String[] { "Shapes", });
    internal_static_frontend_pbf_Shape_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_frontend_pbf_Shape_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_Shape_descriptor,
        new java.lang.String[] { "Type", "Parameters", });
    internal_static_frontend_pbf_MaterialBlock_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_frontend_pbf_MaterialBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_MaterialBlock_descriptor,
        new java.lang.String[] { "Materials", });
    internal_static_frontend_pbf_Material_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_frontend_pbf_Material_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_Material_descriptor,
        new java.lang.String[] { "AmbientR", "AmbientG", "AmbientB", "DiffuseR", "DiffuseG", "DiffuseB", "SpecularR", "SpecularG", "SpecularB", "Shininess", "TextureLayer", "Transparency", "CastShadow", });
    internal_static_frontend_pbf_Material_TextureLayer_descriptor =
      internal_static_frontend_pbf_Material_descriptor.getNestedTypes().get(0);
    internal_static_frontend_pbf_Material_TextureLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_Material_TextureLayer_descriptor,
        new java.lang.String[] { "TextureURL", "Wrap", "Colorable", "TextureWidth", "TextureHeight", "TexCoordFunction", });
    internal_static_frontend_pbf_ModelBlock_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_frontend_pbf_ModelBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_ModelBlock_descriptor,
        new java.lang.String[] { "Models", });
    internal_static_frontend_pbf_TriangleGeometry_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_frontend_pbf_TriangleGeometry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_TriangleGeometry_descriptor,
        new java.lang.String[] { "Material", "Vertices", "TexCoords", });
    internal_static_frontend_pbf_ExtrusionGeometry_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_frontend_pbf_ExtrusionGeometry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_ExtrusionGeometry_descriptor,
        new java.lang.String[] { "Material", "Shape", "Path", "UpVectors", "ScaleFactors", "StartCap", "EndCap", });
    internal_static_frontend_pbf_InstanceGeometry_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_frontend_pbf_InstanceGeometry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_InstanceGeometry_descriptor,
        new java.lang.String[] { "Model", "ResourceIdentifier", "Position", "Direction", "Scale", "Animation", });
    internal_static_frontend_pbf_Animation_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_frontend_pbf_Animation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_Animation_descriptor,
        new java.lang.String[] { "Type", "LoopMode", "TimerType", "RunsPerSecond", });
    internal_static_frontend_pbf_WorldObject_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_frontend_pbf_WorldObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_WorldObject_descriptor,
        new java.lang.String[] { "OsmId", "TypeName", "TriangleGeometries", "ExtrusionGeometries", "InstanceGeometries", });
    internal_static_frontend_pbf_Tile_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_frontend_pbf_Tile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_frontend_pbf_Tile_descriptor,
        new java.lang.String[] { "Vector3DBlock", "Vector2DBlock", "StringBlock", "ShapeBlock", "MaterialBlock", "ModelBlock", "Objects", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
